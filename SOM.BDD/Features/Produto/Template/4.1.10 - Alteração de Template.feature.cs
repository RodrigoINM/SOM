// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Produto.Template
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("4.1.10 - Alteração de Templates", new string[] {
            "kill_Driver",
            "Template",
            "AlteracaoDeTemplateDeProduto"}, Description="Como usuário com permissão \"Produto | Alterar\"\r\nQuero poder atualizar as informaç" +
        "ões de produto com uma mídia já cadastrada no sistema\r\nPara utilizar esta inform" +
        "ação no cadastro de uma cue-sheet associada ao produto", SourceFile="Features\\Produto\\Template\\4.1.10 - Alteração de Template.feature", SourceLine=5)]
    public partial class _4_1_10_AlteracaoDeTemplatesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "4.1.10 - Alteração de Template.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "4.1.10 - Alteração de Templates", "Como usuário com permissão \"Produto | Alterar\"\r\nQuero poder atualizar as informaç" +
                    "ões de produto com uma mídia já cadastrada no sistema\r\nPara utilizar esta inform" +
                    "ação no cadastro de uma cue-sheet associada ao produto", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Template",
                        "AlteracaoDeTemplateDeProduto"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
    testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        public virtual void AlterarTemplate(string titulo, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "AlteracaoDeTemplateDeProdutoCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alterar Template", null, @__tags);
#line 16
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 17
 testRunner.Given("que tenha um produto com template cadastrado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 18
 testRunner.When(string.Format("altero os dados do template {0}", titulo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 19
 testRunner.Then(string.Format("visualizo a mensagem de alteração realizada com sucesso no template {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar Template, \"TESTE INMETRICS\"", new string[] {
                "chrome",
                "AlteracaoDeTemplateDeProdutoCT01"}, SourceLine=22)]
        public virtual void AlterarTemplate_TESTEINMETRICS()
        {
#line 16
this.AlterarTemplate("\"TESTE INMETRICS\"", "\"Item Template cadastrado com sucesso.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void AlterarTemplateComInformacoesDeOutroTemplatePreviamenteCadastrado(string ordem, string titulo, string interprete, string gravadora, string tipoExibicao, string tipoUtilizacao, string sincronismoGlobo, string submix, string tempo, string observacao, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "AlteracaoDeTemplateDeProdutoCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alterar Template com informações de outro template previamente cadastrado", null, @__tags);
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 27
 testRunner.Given("que tenha um produto com template cadastrado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 28
 testRunner.When(string.Format("cadastro um novo item de template para o produto {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}", ordem, titulo, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, submix, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 29
 testRunner.And(string.Format("altero o item informando os mesmos dados do item de template previamente cadastra" +
                        "do {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}", ordem, titulo, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, submix, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 30
 testRunner.Then(string.Format("visualizo a mensagem de alteração realizada com sucesso no template {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar Template com informações de outro template previamente cadastrado, \"1\"", new string[] {
                "chrome",
                "AlteracaoDeTemplateDeProdutoCT02"}, SourceLine=33)]
        public virtual void AlterarTemplateComInformacoesDeOutroTemplatePreviamenteCadastrado_1()
        {
#line 26
this.AlterarTemplateComInformacoesDeOutroTemplatePreviamenteCadastrado("\"1\"", "\"TESTE INMETRICS\"", "\"ANAVITORIA\"", "\"SOM LIVRE\"", "\"Gravado\"", "\"PE – PERFORMANCE\"", "\"ENCERRAMENTO\"", "\"Submix\"", "\"12\"", "\"Teste\"", "\"Item Template cadastrado com sucesso.\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cancelar Alteração em item de template", new string[] {
                "chrome",
                "AlteracaoDeTemplateDeProdutoCT03"}, SourceLine=36)]
        public virtual void CancelarAlteracaoEmItemDeTemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancelar Alteração em item de template", null, new string[] {
                        "chrome",
                        "AlteracaoDeTemplateDeProdutoCT03"});
#line 37
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 38
 testRunner.Given("que tenha um produto com template cadastrado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 39
 testRunner.When("cancelo a alteração de um item do template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 40
 testRunner.Then("volto a visualizar o item previamente cadastrado sem alteração", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
