// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Produto.Template
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("4.1.9 - Cadastro de Templates", new string[] {
            "kill_Driver",
            "Template",
            "CadastroDeTemplateDeProduto"}, Description="Como usuário com permissão \"Produto | Alterar\"\r\nQuero poder atualizar as informaç" +
        "ões de produto com uma mídia já cadastrada no sistema\r\nPara utilizar esta inform" +
        "ação no cadastro de uma cue-sheet associada ao produto", SourceFile="Features\\Produto\\Template\\4.1.9 - Cadastro de Template.feature", SourceLine=5)]
    public partial class _4_1_9_CadastroDeTemplatesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "4.1.9 - Cadastro de Template.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "4.1.9 - Cadastro de Templates", "Como usuário com permissão \"Produto | Alterar\"\r\nQuero poder atualizar as informaç" +
                    "ões de produto com uma mídia já cadastrada no sistema\r\nPara utilizar esta inform" +
                    "ação no cadastro de uma cue-sheet associada ao produto", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Template",
                        "CadastroDeTemplateDeProduto"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
    testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        public virtual void CadastroDeTemplates(string ordem, string titulo, string gravadora, string tipoExibicao, string tipoUtilizacao, string sincronismoGlobo, string submix, string tempo, string observacao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeTemplateDeProdutoCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastro de Templates", null, @__tags);
#line 16
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 17
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 18
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 19
 testRunner.When(string.Format("cadastro um novo item de template para o produto {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}", ordem, titulo, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, submix, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 20
    testRunner.Then(string.Format("visualizo os dados do item de template cadastrados com sucesso {0}, {1}, {2}, {3}" +
                        ", {4}, {5}, {6}, {7}", ordem, titulo, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cadastro de Templates, \"1\"", new string[] {
                "chrome",
                "CadastroDeTemplateDeProdutoCT01"}, SourceLine=23)]
        public virtual void CadastroDeTemplates_1()
        {
#line 16
this.CadastroDeTemplates("\"1\"", "\"Aleatório\"", "\"SOM LIVRE\"", "\"Gravado\"", "\"PE – PERFORMANCE\"", "\"ENCERRAMENTO\"", "\"Submix\"", "\"12\"", "\"Teste\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cadastrar um Template sem preenchimento de campo obrigatório", new string[] {
                "chrome",
                "CadastroDeTemplateDeProdutoCT02"}, SourceLine=26)]
        public virtual void CadastrarUmTemplateSemPreenchimentoDeCampoObrigatorio()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar um Template sem preenchimento de campo obrigatório", null, new string[] {
                        "chrome",
                        "CadastroDeTemplateDeProdutoCT02"});
#line 27
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 28
 testRunner.Given("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 29
 testRunner.When("cadastro um novo item de template para o produto sem preencher os campos obrigato" +
                    "rios", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 30
 testRunner.Then("visualizo os campos obrigatorios de cadastros de item de template em destaque", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CadastrarUmTemplateComInformacoesIguais(string ordem, string titulo, string interprete, string gravadora, string tipoExibicao, string tipoUtilizacao, string sincronismoGlobo, string submix, string tempo, string observacao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeTemplateDeProdutoCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar um Template com informações iguais", null, @__tags);
#line 33
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 34
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 35
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 36
 testRunner.When(string.Format("cadastro dois itens de template identicos para o produto {0}, {1}, {2}, {3}, {4}," +
                        " {5}, {6}, {7}, {8}, {9}", ordem, titulo, interprete, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, submix, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 37
    testRunner.Then(string.Format("visualizo os dados do item de template cadastrados com sucesso {0}, {1}, {2}, {3}" +
                        ", {4}, {5}, {6}, {7}", ordem, titulo, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cadastrar um Template com informações iguais, \"1\"", new string[] {
                "chrome",
                "CadastroDeTemplateDeProdutoCT03"}, SourceLine=40)]
        public virtual void CadastrarUmTemplateComInformacoesIguais_1()
        {
#line 33
this.CadastrarUmTemplateComInformacoesIguais("\"1\"", "\"Aleatório\"", "\"ANAVITORIA\"", "\"SOM LIVRE\"", "\"Gravado\"", "\"PE – PERFORMANCE\"", "\"ENCERRAMENTO\"", "\"Submix\"", "\"12\"", "\"Teste\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cancelar cadastro de Template", new string[] {
                "chrome",
                "CadastroDeTemplateDeProdutoCT04"}, SourceLine=43)]
        public virtual void CancelarCadastroDeTemplate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancelar cadastro de Template", null, new string[] {
                        "chrome",
                        "CadastroDeTemplateDeProdutoCT04"});
#line 44
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 45
 testRunner.Given("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 46
 testRunner.When("cancelo a criação de um novo item de template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 47
 testRunner.Then("visualizo a tela do produto sem ter criado um item de template", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void CriacaoDeBlocosParaItemDeTemplate(string bloco, string ordem, string titulo, string interprete, string gravadora, string tipoExibicao, string tipoUtilizacao, string sincronismoGlobo, string submix, string tempo, string observacao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeTemplateDeProdutoCT05"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criação de Blocos para item de template", null, @__tags);
#line 50
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 51
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 52
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 53
 testRunner.When(string.Format("cadastro um novo item de template para o produto {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}", ordem, titulo, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, submix, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 54
 testRunner.And(string.Format("adiciono um bloco para o item de template criado {0}", bloco), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 55
 testRunner.Then(string.Format("visualizo o bloco criado para o item de template com sucesso {0}", bloco), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criação de Blocos para item de template, \"Teste de Bloco\"", new string[] {
                "chrome",
                "CadastroDeTemplateDeProdutoCT05"}, SourceLine=58)]
        public virtual void CriacaoDeBlocosParaItemDeTemplate_TesteDeBloco()
        {
#line 50
this.CriacaoDeBlocosParaItemDeTemplate("\"Teste de Bloco\"", "\"1\"", "\"Aleatório\"", "\"ANAVITORIA\"", "\"SOM LIVRE\"", "\"Gravado\"", "\"PE – PERFORMANCE\"", "\"ENCERRAMENTO\"", "\"Submix\"", "\"12\"", "\"Teste\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void CriacaoDeMateriaDeParaItemDeTemplate(string materia, string bloco, string ordem, string titulo, string interprete, string gravadora, string tipoExibicao, string tipoUtilizacao, string sincronismoGlobo, string submix, string tempo, string observacao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeTemplateDeProdutoCT06"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criação de Materia de para item de template", null, @__tags);
#line 62
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 63
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 64
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 65
 testRunner.When(string.Format("cadastro um novo item de template para o produto {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}", ordem, titulo, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, submix, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 66
 testRunner.And(string.Format("adiciono um bloco para o item de template criado {0}", bloco), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 67
 testRunner.And(string.Format("adiciono uma materia para o item de template criado {0}", materia), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 68
 testRunner.Then(string.Format("visualizo o bloco e a materia criada para o item de template com sucesso {0}, {1}" +
                        "", bloco, materia), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criação de Materia de para item de template, \"Teste de Materia\"", new string[] {
                "chrome",
                "CadastroDeTemplateDeProdutoCT06"}, SourceLine=71)]
        public virtual void CriacaoDeMateriaDeParaItemDeTemplate_TesteDeMateria()
        {
#line 62
this.CriacaoDeMateriaDeParaItemDeTemplate("\"Teste de Materia\"", "\"Teste de Bloco\"", "\"1\"", "\"Aleatório\"", "\"ANAVITORIA\"", "\"SOM LIVRE\"", "\"Gravado\"", "\"PE – PERFORMANCE\"", "\"ENCERRAMENTO\"", "\"Submix\"", "\"12\"", "\"Teste\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void CriacaoDeBlocosParaItemDeTemplateNaoSequenciais(string bloco, string ordem, string titulo, string interprete, string gravadora, string tipoExibicao, string tipoUtilizacao, string sincronismoGlobo, string submix, string tempo, string observacao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeTemplateDeProdutoCT07"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Criação de Blocos para item de template não sequenciais", null, @__tags);
#line 75
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 76
    testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 77
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 78
 testRunner.When(string.Format("cadastro dois itens de template identicos para o produto {0}, {1}, {2}, {3}, {4}," +
                        " {5}, {6}, {7}, {8}, {9}", ordem, titulo, interprete, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, submix, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 79
 testRunner.And(string.Format("adiciono um bloco para o segundo item de template criado {0}, {1}", bloco, ordem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 80
 testRunner.Then(string.Format("visualizo o bloco criado para o item de template com sucesso {0}", bloco), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Criação de Blocos para item de template não sequenciais, \"Teste de Bloco\"", new string[] {
                "chrome",
                "CadastroDeTemplateDeProdutoCT07"}, SourceLine=83)]
        public virtual void CriacaoDeBlocosParaItemDeTemplateNaoSequenciais_TesteDeBloco()
        {
#line 75
this.CriacaoDeBlocosParaItemDeTemplateNaoSequenciais("\"Teste de Bloco\"", "\"1\"", "\"Aleatório\"", "\"ANAVITORIA\"", "\"SOM LIVRE\"", "\"Gravado\"", "\"PE – PERFORMANCE\"", "\"ENCERRAMENTO\"", "\"Submix\"", "\"12\"", "\"Teste\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void AdicionarUmaMateriaAOutraMateria(string materia, string bloco, string ordem, string titulo, string interprete, string gravadora, string tipoExibicao, string tipoUtilizacao, string sincronismoGlobo, string submix, string tempo, string observacao, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeTemplateDeProdutoCT08"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Adicionar uma matéria à outra matéria", null, @__tags);
#line 87
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 88
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 89
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 90
 testRunner.When(string.Format("cadastro um novo item de template para o produto {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}", ordem, titulo, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, submix, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 91
 testRunner.And(string.Format("adiciono um bloco para o item de template criado {0}", bloco), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 92
 testRunner.And(string.Format("adiciono uma materia para o item de template criado {0}", materia), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 93
 testRunner.And("tento adicionar uma nova materia para a materia já criada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 94
 testRunner.Then(string.Format("visualizo uma mensagem de erro informando que o item selecionado já possui uma ma" +
                        "teria e bloco {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Adicionar uma matéria à outra matéria, \"Teste de Materia\"", new string[] {
                "chrome",
                "CadastroDeTemplateDeProdutoCT08"}, SourceLine=97)]
        public virtual void AdicionarUmaMateriaAOutraMateria_TesteDeMateria()
        {
#line 87
this.AdicionarUmaMateriaAOutraMateria("\"Teste de Materia\"", "\"Teste de Bloco\"", "\"1\"", "\"Aleatório\"", "\"ANAVITORIA\"", "\"SOM LIVRE\"", "\"Gravado\"", "\"PE – PERFORMANCE\"", "\"ENCERRAMENTO\"", "\"Submix\"", "\"12\"", "\"Teste\"", "\"Todos os itens selecionados possuem matéria e bloco.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void InclusaoDeInterpretePeloTemplate(string ordem, string titulo, string gravadora, string tipoExibicao, string tipoUtilizacao, string sincronismoGlobo, string submix, string tempo, string observacao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeTemplateDeProdutoCT09"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Inclusão de intérprete pelo Template", null, @__tags);
#line 101
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 102
    testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 103
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 104
 testRunner.When(string.Format("cadastro um novo item de template para o produto criando um novo interprete na te" +
                        "la de criação do item {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}", ordem, titulo, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, submix, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 105
    testRunner.Then(string.Format("visualizo os dados do item de template cadastrados com sucesso {0}, {1}, {2}, {3}" +
                        ", {4}, {5}, {6}, {7}", ordem, titulo, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Inclusão de intérprete pelo Template, \"1\"", new string[] {
                "chrome",
                "CadastroDeTemplateDeProdutoCT09"}, SourceLine=108)]
        public virtual void InclusaoDeInterpretePeloTemplate_1()
        {
#line 101
this.InclusaoDeInterpretePeloTemplate("\"1\"", "\"Aleatório\"", "\"SOM LIVRE\"", "\"Gravado\"", "\"PE – PERFORMANCE\"", "\"ENCERRAMENTO\"", "\"Submix\"", "\"12\"", "\"Teste\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void InclusaoDeInterpretePeloTemplateJaExistente(string ordem, string titulo, string interprete, string gravadora, string tipoExibicao, string tipoUtilizacao, string sincronismoGlobo, string submix, string tempo, string observacao, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeTemplateDeProdutoCT10"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Inclusão de intérprete pelo Template já existente", null, @__tags);
#line 112
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
this.FeatureBackground();
#line 113
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 114
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 115
 testRunner.When(string.Format("cadastro um novo item de template para o produto tentando cadastrar um interprete" +
                        " já existente na tela de criação do item {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}," +
                        " {8}, {9}", ordem, titulo, interprete, gravadora, tipoExibicao, tipoUtilizacao, sincronismoGlobo, submix, tempo, observacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 116
    testRunner.Then(string.Format("visualizo uma mensagem de erro ao tentar cadastrar um interprete já existente {0}" +
                        "", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Inclusão de intérprete pelo Template já existente, \"1\"", new string[] {
                "chrome",
                "CadastroDeTemplateDeProdutoCT10"}, SourceLine=119)]
        public virtual void InclusaoDeInterpretePeloTemplateJaExistente_1()
        {
#line 112
this.InclusaoDeInterpretePeloTemplateJaExistente("\"1\"", "\"Aleatório\"", "\"ANAVITORIA\"", "\"SOM LIVRE\"", "\"Gravado\"", "\"PE – PERFORMANCE\"", "\"ENCERRAMENTO\"", "\"Submix\"", "\"12\"", "\"Teste\"", "\"Não foi possível realizar o cadastro. Intérprete já existente.\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
