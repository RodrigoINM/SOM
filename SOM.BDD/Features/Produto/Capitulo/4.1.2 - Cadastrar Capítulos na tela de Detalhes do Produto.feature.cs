// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Produto.Capitulo
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("4.1.2 - Cadastrar capítulos na tela de detalhes do produto", new string[] {
            "kill_Driver",
            "Capitulo",
            "CadastroDeCapituloNaTelaDeDetalhes"}, Description="Como um usuário com permissão de cadastrar capítulos\r\nEu quero poder cadastrar as" +
        " informações de capítulo para um produto já cadastrado\r\nPara que possa utilizar " +
        "os dados no cadastro associada ao produto", SourceFile="Features\\Produto\\Capitulo\\4.1.2 - Cadastrar Capítulos na tela de Detalhes do Prod" +
        "uto.feature", SourceLine=5)]
    public partial class _4_1_2_CadastrarCapitulosNaTelaDeDetalhesDoProdutoFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "4.1.2 - Cadastrar Capítulos na tela de Detalhes do Produto.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "4.1.2 - Cadastrar capítulos na tela de detalhes do produto", "Como um usuário com permissão de cadastrar capítulos\r\nEu quero poder cadastrar as" +
                    " informações de capítulo para um produto já cadastrado\r\nPara que possa utilizar " +
                    "os dados no cadastro associada ao produto", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Capitulo",
                        "CadastroDeCapituloNaTelaDeDetalhes"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 11
#line 12
    testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        public virtual void CadastrarCapituloNaTelaDeDetalhesDeProduto(string capitulo, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeCapituloNaTelaDeDetalhesCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar capítulo na tela de detalhes de produto", null, @__tags);
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 11
this.FeatureBackground();
#line 16
 testRunner.Given("que esteja na tela de detalhes de um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 17
 testRunner.When(string.Format("cadastro um novo capitulo através da tela de detalhes do produto {0}", capitulo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 18
 testRunner.Then(string.Format("visualizo o capitulo cadastrado no produto com sucesso {0}", capitulo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cadastrar capítulo na tela de detalhes de produto, \"45\"", new string[] {
                "chrome",
                "CadastroDeCapituloNaTelaDeDetalhesCT01"}, SourceLine=21)]
        public virtual void CadastrarCapituloNaTelaDeDetalhesDeProduto_45()
        {
#line 15
this.CadastrarCapituloNaTelaDeDetalhesDeProduto("\"45\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void CadastrarCapituloEmLoteNaTelaDeDetalhesDoProduto(string capitulo, string geracaoLote, string quantidadeCapitulos, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeCapituloNaTelaDeDetalhesCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar capítulo em lote na tela de detalhes do Produto", null, @__tags);
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 11
this.FeatureBackground();
#line 26
 testRunner.Given("que esteja na tela de detalhes de um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 27
 testRunner.When(string.Format("cadastrado capitulos em lote através da tela de detalhes do produto {0}, {1}, {2}" +
                        "", capitulo, geracaoLote, quantidadeCapitulos), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 28
 testRunner.Then(string.Format("visualizo o capitulo cadastrado no produto com sucesso {0}", capitulo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cadastrar capítulo em lote na tela de detalhes do Produto, \"20\"", new string[] {
                "chrome",
                "CadastroDeCapituloNaTelaDeDetalhesCT02"}, SourceLine=31)]
        public virtual void CadastrarCapituloEmLoteNaTelaDeDetalhesDoProduto_20()
        {
#line 25
this.CadastrarCapituloEmLoteNaTelaDeDetalhesDoProduto("\"20\"", "\"Sim\"", "\"5\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cadastrar capítulo sem preenchimento de campo obrigatório na tela de detalhes do " +
            "Produto", new string[] {
                "chrome",
                "CadastroDeCapituloNaTelaDeDetalhesCT03"}, SourceLine=34)]
        public virtual void CadastrarCapituloSemPreenchimentoDeCampoObrigatorioNaTelaDeDetalhesDoProduto()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar capítulo sem preenchimento de campo obrigatório na tela de detalhes do " +
                    "Produto", null, new string[] {
                        "chrome",
                        "CadastroDeCapituloNaTelaDeDetalhesCT03"});
#line 35
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 11
this.FeatureBackground();
#line 36
 testRunner.Given("que esteja na tela de detalhes de um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 37
 testRunner.When("tento cadastrar um capitulo sem preencher os campos obrigatórios", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 38
 testRunner.Then("visualizo o campo obrigatório para cadastro de capitulo em destaque", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cancelar cadastro de Capítulo na tela de detalhes do Produto", new string[] {
                "chrome",
                "CadastroDeCapituloNaTelaDeDetalhesCT04"}, SourceLine=40)]
        public virtual void CancelarCadastroDeCapituloNaTelaDeDetalhesDoProduto()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancelar cadastro de Capítulo na tela de detalhes do Produto", null, new string[] {
                        "chrome",
                        "CadastroDeCapituloNaTelaDeDetalhesCT04"});
#line 41
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 11
this.FeatureBackground();
#line 42
 testRunner.Given("que esteja na tela de detalhes de um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 43
 testRunner.When("cancelo o cadastro de um novo capitulo na tela de detalhes do produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 44
 testRunner.Then("eu visualizo a tela de detalhes do produto sem o capitulo criado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
