// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Produto.Capitulo
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("4.1.3 - Alterar capítulos", new string[] {
            "kill_Driver",
            "Capitulo",
            "AlteracaoDeCapitulo"}, Description=@"Como um usuário com permissão para alterar pedido
Eu quero poder atualizar as informações de capítulo para um produto já cadastrado
Para que possa utilizar os dados no cadastro associada ao produto

Critérios de aceite:
Sistema deverá utilizar os dados cadastrados de capítulo associada ao produto", SourceFile="Features\\Produto\\Capitulo\\4.1.3 - Alterar Capítulo.feature", SourceLine=5)]
    public partial class _4_1_3_AlterarCapitulosFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "4.1.3 - Alterar Capítulo.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "4.1.3 - Alterar capítulos", @"Como um usuário com permissão para alterar pedido
Eu quero poder atualizar as informações de capítulo para um produto já cadastrado
Para que possa utilizar os dados no cadastro associada ao produto

Critérios de aceite:
Sistema deverá utilizar os dados cadastrados de capítulo associada ao produto", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Capitulo",
                        "AlteracaoDeCapitulo"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 14
#line 15
    testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        public virtual void AlterarCapitulo(string nomeProduto, string capitulo, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "AlteracaoDeCapituloCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alterar capítulo", null, @__tags);
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
this.FeatureBackground();
#line 19
 testRunner.Given("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 20
 testRunner.And("que esteja na tela de consulta de capitulos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 21
    testRunner.When(string.Format("faço uma busca de capítulo por nome do Produto {0}", nomeProduto), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 22
 testRunner.And(string.Format("altero o número do capítulo do produto cadastrado {0}, {1}", nomeProduto, capitulo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 23
 testRunner.Then(string.Format("visualizo a mensagem de que o capítulo foi alterado com sucesso {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar capítulo, \"Aleatório\"", new string[] {
                "chrome",
                "AlteracaoDeCapituloCT01"}, SourceLine=26)]
        public virtual void AlterarCapitulo_Aleatorio()
        {
#line 18
this.AlterarCapitulo("\"Aleatório\"", "\"54\"", "\"Registro adicionado com sucesso.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void AlterarCapituloParaUmNumeroDeCapituloJaExistenteParaOProdutoAssociado(string nomeProduto, string capituloInicial, string capituloFinal, string capitulo1, string capitulo2, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "AlteracaoDeCapituloCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alterar Capítulo para um número de capítulo já existente para o Produto associado" +
                    "", null, @__tags);
#line 30
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
this.FeatureBackground();
#line 31
 testRunner.Given(string.Format("que tenha um produto cadastrado no sistema com dois capitulos cadastrados {0}, {1" +
                        "}", capitulo1, capitulo2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 32
 testRunner.And("que esteja na tela de consulta de capitulos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 33
    testRunner.When(string.Format("faço uma busca de capítulo por nome do Produto e capitulos inicial e final {0}, {" +
                        "1}, {2}", nomeProduto, capituloInicial, capituloFinal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 34
 testRunner.And(string.Format("altero o valor de um capitulo para o mesmo valor do outro já cadastrado {0}, {1}", capitulo1, capitulo2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 35
 testRunner.Then(string.Format("visualizo a mensagem de que já existe um capitulo cadastrado com esses dados no p" +
                        "roduto {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar Capítulo para um número de capítulo já existente para o Produto associado" +
            ", \"Aleatório\"", new string[] {
                "chrome",
                "AlteracaoDeCapituloCT02"}, SourceLine=39)]
        public virtual void AlterarCapituloParaUmNumeroDeCapituloJaExistenteParaOProdutoAssociado_Aleatorio()
        {
#line 30
this.AlterarCapituloParaUmNumeroDeCapituloJaExistenteParaOProdutoAssociado("\"Aleatório\"", "\"10\"", "\"10\"", "\"10\"", "\"22\"", "\"Existe um registro com esses dados cadastrado no sistema.\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
