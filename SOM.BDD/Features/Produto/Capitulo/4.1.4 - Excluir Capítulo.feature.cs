// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Produto.Capitulo
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("4.1.4 - Excluir capítulos", new string[] {
            "kill_Driver",
            "Capitulo",
            "ExclusaoDeCapitulo"}, Description="Como um usuário com permissão para excluir capítulo\r\nEu quero poder excluir capít" +
        "ulo\r\nPara que o mesmo não seja apresentado no sistema", SourceFile="Features\\Produto\\Capitulo\\4.1.4 - Excluir Capítulo.feature", SourceLine=5)]
    public partial class _4_1_4_ExcluirCapitulosFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "4.1.4 - Excluir Capítulo.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "4.1.4 - Excluir capítulos", "Como um usuário com permissão para excluir capítulo\r\nEu quero poder excluir capít" +
                    "ulo\r\nPara que o mesmo não seja apresentado no sistema", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Capitulo",
                        "ExclusaoDeCapitulo"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 11
#line 12
    testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        public virtual void ExcluirCapitulo(string nomeProduto, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ExclusaoDeCapituloCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Excluir capítulo", null, @__tags);
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 11
this.FeatureBackground();
#line 16
 testRunner.Given("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 17
 testRunner.And("que esteja na tela de consulta de capitulos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 18
 testRunner.When(string.Format("faço uma busca de capítulo por nome do Produto {0}", nomeProduto), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 19
 testRunner.And(string.Format("excluo o capitulo do produto cadastrado {0}", nomeProduto), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 20
 testRunner.Then(string.Format("visualizo a mensagem de capítulo excluido com sucesso {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Excluir capítulo, \"Aleatório\"", new string[] {
                "chrome",
                "ExclusaoDeCapituloCT01"}, SourceLine=23)]
        public virtual void ExcluirCapitulo_Aleatorio()
        {
#line 15
this.ExcluirCapitulo("\"Aleatório\"", "\"Registro excluído com sucesso.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void CancelarExclusaoDeCapitulo(string nomeProduto, string episodio, string capitulo, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ExclusaoDeCapituloCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancelar Exclusão de capítulo", null, @__tags);
#line 27
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 11
this.FeatureBackground();
#line 28
 testRunner.Given("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 29
 testRunner.And("que esteja na tela de consulta de capitulos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 30
 testRunner.When(string.Format("faço uma busca de capítulo por nome do Produto {0}", nomeProduto), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 31
 testRunner.And(string.Format("cancelo a exclusão do capitulo do produto cadastrado {0}", nomeProduto), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 32
 testRunner.Then(string.Format("visualizo os dados do produto e capítulo cadastrados no sistema no resultado da b" +
                        "usca {0}, {1}, {2}", nomeProduto, episodio, capitulo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cancelar Exclusão de capítulo, \"Aleatório\"", new string[] {
                "chrome",
                "ExclusaoDeCapituloCT02"}, SourceLine=35)]
        public virtual void CancelarExclusaoDeCapitulo_Aleatorio()
        {
#line 27
this.CancelarExclusaoDeCapitulo("\"Aleatório\"", "\"Aleatório\"", "\"01\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
