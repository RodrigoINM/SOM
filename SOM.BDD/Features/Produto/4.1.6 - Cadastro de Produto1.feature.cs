// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Produto
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("4.1.6 - Cadastro de Produto", new string[] {
            "kill_Driver",
            "Produto",
            "CadastroDeProduto"}, SourceFile="Features\\Produto\\4.1.6 - Cadastro de Produto.feature", SourceLine=6)]
    public partial class _4_1_6_CadastroDeProdutoFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "4.1.6 - Cadastro de Produto.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "4.1.6 - Cadastro de Produto", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Produto",
                        "CadastroDeProduto"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 9
#line 10
 testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 11
 testRunner.And("que esteja com a tela Cadastro de Produto aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        public virtual void CadastrarNovoProduto(string nome, string episodio, string generoOriginal, string generoDireitosMusicais, string aR, string gradeAtual, string atividade, string atualizaOrigem, string midias, string capituloObrigatorio, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeProdutoCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar novo Produto", null, @__tags);
#line 14
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 15
    testRunner.When(string.Format("cadastro um novo Produto preenchendo os campos {0}, {1}, {2}, {3}, {4}, {5}, {6} " +
                        "e {7}", generoOriginal, generoDireitosMusicais, aR, gradeAtual, midias, atividade, atualizaOrigem, capituloObrigatorio), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 16
    testRunner.Then(string.Format("visualizo a {0} de cadastro de produto realizado com sucesso", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line 17
 testRunner.And(string.Format("visualizo os campos {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8} e {9} cadastrados" +
                        " no detalhe do produto", nome, episodio, generoOriginal, generoDireitosMusicais, aR, gradeAtual, midias, atividade, atualizaOrigem, capituloObrigatorio), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cadastrar novo Produto, \"Titulo do Produto 500\"", new string[] {
                "chrome",
                "CadastroDeProdutoCT01"}, SourceLine=20)]
        public virtual void CadastrarNovoProduto_TituloDoProduto500()
        {
#line 14
this.CadastrarNovoProduto("\"Titulo do Produto 500\"", "\"Episodio do Produto 500\"", "\"Novela\"", "\"DRAMATURGIA SEMANAL\"", "\"4135\"", "\"Sim\"", "\"Atividade\"", "\"Não\"", "\"GLOBONEWS\"", "\"Não\"", "\"Registro salvo com sucesso.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void CadastrarProdutoSemPreenchimentoDeCampoObrigatorio(string nome, string aR, string generoDireitosMusicais, string atividade, string midia, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeProdutoCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar Produto sem preenchimento de campo obrigatório", null, @__tags);
#line 24
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 25
    testRunner.When(string.Format("cadastro um Produto sem preenchimento dos campos {0}, {1}, {2}, {3} ou {4}", nome, aR, generoDireitosMusicais, atividade, midia), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 26
 testRunner.Then(string.Format("visualizo os campos obrigatorios para cadastro de produto em destaque {0}, {1}, {" +
                        "2}, {3} e {4}", nome, aR, generoDireitosMusicais, atividade, midia), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cadastrar Produto sem preenchimento de campo obrigatório, \" \"", new string[] {
                "chrome",
                "CadastroDeProdutoCT02"}, SourceLine=29)]
        public virtual void CadastrarProdutoSemPreenchimentoDeCampoObrigatorio_()
        {
#line 24
this.CadastrarProdutoSemPreenchimentoDeCampoObrigatorio("\" \"", "\" \"", "\" \"", "\" \"", "\" \"", ((string[])(null)));
#line hidden
        }
        
        public virtual void CancelarCadastroDeProduto(string nome, string episodio, string generoOriginal, string generoDireitosMusicais, string aR, string gradeAtual, string atividade, string atualizaOrigem, string midias, string capituloObrigatorio, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeProdutoCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cancelar cadastro de Produto", null, @__tags);
#line 33
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 34
    testRunner.When(string.Format("cancelo o cadastro de um novo produto com todos os campos preenchidos {0}, {1}, {" +
                        "2}, {3}, {4}, {5}, {6}, {7}, {8} e {9}", nome, episodio, generoOriginal, generoDireitosMusicais, aR, gradeAtual, midias, atividade, atualizaOrigem, capituloObrigatorio), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 35
    testRunner.Then("visualizo a tela de busca de Produto", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cancelar cadastro de Produto, \"Titulo do Produto 501\"", new string[] {
                "chrome",
                "CadastroDeProdutoCT03"}, SourceLine=38)]
        public virtual void CancelarCadastroDeProduto_TituloDoProduto501()
        {
#line 33
this.CancelarCadastroDeProduto("\"Titulo do Produto 501\"", "\"Episodio do Produto 501\"", "\"Novela\"", "\"DRAMATURGIA SEMANAL\"", "\"4135\"", "\"Sim\"", "\"Atividade\"", "\"Não\"", "\"GLOBONEWS\"", "\"Não\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void CadastrarNovoProdutoComInformacoesDeOutroProdutoPreviamenteCadastrado(string nome, string episodio, string generoOriginal, string generoDireitosMusicais, string aR, string gradeAtual, string atividade, string atualizaOrigem, string midias, string capituloObrigatorio, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "CadastroDeProdutoCT04"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Cadastrar novo Produto com informações de outro produto previamente cadastrado", null, @__tags);
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 43
 testRunner.Given(string.Format("que tenha um produto cadastrado {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}", nome, episodio, generoOriginal, generoDireitosMusicais, aR, gradeAtual, midias, atividade, atualizaOrigem, capituloObrigatorio), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 44
    testRunner.When(string.Format("tento cadastrar um novo Produto com as mesmas informações de um produto previamen" +
                        "te cadastrado {0}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8} e {9}", nome, episodio, generoOriginal, generoDireitosMusicais, aR, gradeAtual, midias, atividade, atualizaOrigem, capituloObrigatorio), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 45
    testRunner.Then(string.Format("visualizo a mensagem de que já existe um produto ativo cadastrado com esses dados" +
                        " {0}, {1}", nome, mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Cadastrar novo Produto com informações de outro produto previamente cadastrado, \"" +
            "Titulo do Produto 502\"", new string[] {
                "chrome",
                "CadastroDeProdutoCT04"}, SourceLine=48)]
        public virtual void CadastrarNovoProdutoComInformacoesDeOutroProdutoPreviamenteCadastrado_TituloDoProduto502()
        {
#line 42
this.CadastrarNovoProdutoComInformacoesDeOutroProdutoPreviamenteCadastrado("\"Titulo do Produto 502\"", "\"Episodio do Produto 502\"", "\"Novela\"", "\"DRAMATURGIA SEMANAL\"", "\"4135\"", "\"Sim\"", "\"Atividade\"", "\"Não\"", "\"GLOBONEWS\"", "\"Não\"", "\"Existe um registro com esses dados cadastrado no sistema.\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
