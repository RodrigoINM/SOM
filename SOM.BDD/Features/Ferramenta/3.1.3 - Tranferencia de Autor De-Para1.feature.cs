// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Ferramenta
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("3.1.3 - Transferencia de Autor (De/Para)", new string[] {
            "kill_Driver",
            "Ferramentas",
            "TransferenciaDePara"}, SourceFile="Features\\Ferramenta\\3.1.3 - Tranferencia de Autor De-Para.feature", SourceLine=6)]
    public partial class _3_1_3_TransferenciaDeAutorDeParaFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "3.1.3 - Tranferencia de Autor De-Para.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "3.1.3 - Transferencia de Autor (De/Para)", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Ferramentas",
                        "TransferenciaDePara"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 10
#line 11
    testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        public virtual void TransferenciaDeAutorDeParaComSucesso_(string nomeAutorDe, string nomeAutorPara, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de Autor (De/Para) com sucesso.", null, @__tags);
#line 14
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line 15
 testRunner.Given("a tela transferencia de autor (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 16
    testRunner.When(string.Format("realizo uma Transferência preenchendo os campos {0} e {1}", nomeAutorDe, nomeAutorPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 17
    testRunner.Then(string.Format("visualizo a mensagem de confirmação de transferência {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de Autor (De/Para) com sucesso., \"Teste Autor Teste\"", new string[] {
                "chrome",
                "TransferenciaDeParaCT01"}, SourceLine=20)]
        public virtual void TransferenciaDeAutorDeParaComSucesso__TesteAutorTeste()
        {
#line 14
this.TransferenciaDeAutorDeParaComSucesso_("\"Teste Autor Teste\"", "\"NOVO SOM\"", "\"Dados alterados com sucesso e enviados ao GMUSIC.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeAutorDeParaComTodosOsCamposEmBranco_(string nomeAutorDe, string nomeAutorPara, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de Autor (De/Para) com todos os campos em branco.", null, @__tags);
#line 24
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line 25
 testRunner.Given("a tela transferencia de autor (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 26
    testRunner.When(string.Format("realizo uma Transferência preenchendo os campos {0} e {1}", nomeAutorDe, nomeAutorPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 27
    testRunner.Then("visualizo os campos NomeAutorDE e NomeAutorPara em destaque para preenchimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de Autor (De/Para) com todos os campos em branco., \"\"", new string[] {
                "chrome",
                "TransferenciaDeParaCT02"}, SourceLine=30)]
        public virtual void TransferenciaDeAutorDeParaComTodosOsCamposEmBranco__()
        {
#line 24
this.TransferenciaDeAutorDeParaComTodosOsCamposEmBranco_("\"\"", "\"\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeAutorDeParaComNomeAutorDeInexistente_(string nomeAutorDe, string nomeAutorPara, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de Autor (De/Para) com Nome Autor(De) inexistente.", null, @__tags);
#line 34
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line 35
 testRunner.Given("a tela transferencia de autor (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 36
    testRunner.When(string.Format("realizo uma Transferência preenchendo os campos {0} e {1}", nomeAutorDe, nomeAutorPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 37
    testRunner.Then("visualizo o campo NomeAutorDe em destaque para preenchimento.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de Autor (De/Para) com Nome Autor(De) inexistente., \"Inmetrics\"", new string[] {
                "chrome",
                "TransferenciaDeParaCT03"}, SourceLine=40)]
        public virtual void TransferenciaDeAutorDeParaComNomeAutorDeInexistente__Inmetrics()
        {
#line 34
this.TransferenciaDeAutorDeParaComNomeAutorDeInexistente_("\"Inmetrics\"", "\"NOVO SOM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeAutorDeParaComNomeAutorParaInexistente_(string nomeAutorDe, string nomeAutorPara, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT04"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de Autor (De/Para) com Nome Autor(Para) inexistente.", null, @__tags);
#line 44
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line 45
 testRunner.Given("a tela transferencia de autor (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 46
    testRunner.When(string.Format("realizo uma Transferência preenchendo os campos {0} e {1}", nomeAutorDe, nomeAutorPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 47
    testRunner.Then("visualizo o campo NomeAutorPara em destaque para preenchimento.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de Autor (De/Para) com Nome Autor(Para) inexistente., \"NOVO SOM\"", new string[] {
                "chrome",
                "TransferenciaDeParaCT04"}, SourceLine=50)]
        public virtual void TransferenciaDeAutorDeParaComNomeAutorParaInexistente__NOVOSOM()
        {
#line 44
this.TransferenciaDeAutorDeParaComNomeAutorParaInexistente_("\"NOVO SOM\"", "\"Inmetrics\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeAutorDeParaComNomeAutorDeSemObras_(string nomeAutorDe, string nomeAutorPara, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT05"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("transferencia de autor (De/Para) com nome Autor(De) sem obras.", null, @__tags);
#line 54
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line 55
 testRunner.Given("a tela transferencia de autor (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 56
    testRunner.When(string.Format("realizo uma Transferência preenchendo os campos {0} e {1}", nomeAutorDe, nomeAutorPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 57
    testRunner.Then(string.Format("visualizo a mensagem que o Autor não possui obras {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("transferencia de autor (De/Para) com nome Autor(De) sem obras., \"NOVO SOM\"", new string[] {
                "chrome",
                "TransferenciaDeParaCT05"}, SourceLine=60)]
        public virtual void TransferenciaDeAutorDeParaComNomeAutorDeSemObras__NOVOSOM()
        {
#line 54
this.TransferenciaDeAutorDeParaComNomeAutorDeSemObras_("\"NOVO SOM\"", "\"Teste Autor Teste\"", "\"Autor não possui Obras.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeAutorDeParaComNomeAutorDeParaIguais_(string nomeAutorDe, string nomeAutorPara, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT06"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de Autor (De/Para) com Nome Autor (De/Para) iguais.", null, @__tags);
#line 64
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line 65
 testRunner.Given("a tela transferencia de autor (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 66
    testRunner.When(string.Format("realizo uma Transferência preenchendo os campos {0} e {1}", nomeAutorDe, nomeAutorPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 67
    testRunner.And(string.Format("visualizo a mensagem de Autor DePara não permitido {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de Autor (De/Para) com Nome Autor (De/Para) iguais., \"NOVO SOM\"", new string[] {
                "chrome",
                "TransferenciaDeParaCT06"}, SourceLine=70)]
        public virtual void TransferenciaDeAutorDeParaComNomeAutorDeParaIguais__NOVOSOM()
        {
#line 64
this.TransferenciaDeAutorDeParaComNomeAutorDeParaIguais_("\"NOVO SOM\"", "\"NOVO SOM\"", "\"Operação cancelada, não permitido fazer a transferência para o mesmo autor.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeAutorDeParaSelecionandoCheckBoxExcluir(string nomeAutorPara, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT07"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de Autor (De/Para) selecionando checkBox Excluir", null, @__tags);
#line 74
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
this.FeatureBackground();
#line 75
    testRunner.When(string.Format("realizo uma Transferência de autor preenchendo o campos AutorDe e AutorPara {0}", nomeAutorPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 76
    testRunner.And("seleciono o checkbox de excluir AutorDe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 77
 testRunner.Then(string.Format("visualizo a mensagem de confirmação da exclusão do autor {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de Autor (De/Para) selecionando checkBox Excluir, \"NOVO SOM\"", new string[] {
                "chrome",
                "TransferenciaDeParaCT07"}, SourceLine=80)]
        public virtual void TransferenciaDeAutorDeParaSelecionandoCheckBoxExcluir_NOVOSOM()
        {
#line 74
this.TransferenciaDeAutorDeParaSelecionandoCheckBoxExcluir("\"NOVO SOM\"", "\"Autor excluído com sucesso\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
