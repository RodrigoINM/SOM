// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Ferramenta
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("3.1.3 - Transferência de Controle Editorial (De/Para)", new string[] {
            "kill_Driver",
            "Ferramentas",
            "TransferenciaDePara"}, SourceFile="Features\\Ferramenta\\3.1.3 - Transferência de Controle Editorial.feature", SourceLine=6)]
    public partial class _3_1_3_TransferenciaDeControleEditorialDeParaFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "3.1.3 - Transferência de Controle Editorial.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "3.1.3 - Transferência de Controle Editorial (De/Para)", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Ferramentas",
                        "TransferenciaDePara"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 9
#line 10
    testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 11
    testRunner.And("a tela Transferência de Controle Editorial (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        public virtual void RealizarUmaTransferenciaDeControleEditorialDeParaComTodosOsCamposEmBranco(string nomeAutorDe, string nomeAutorPara, string nomeDDADe, string nomeDDAPara, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Realizar uma Transferência de Controle Editorial (De/Para) com todos os campos em" +
                    " branco", null, @__tags);
#line 14
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 15
    testRunner.When(string.Format("realizo uma Transferência sem preencher os campos NomeAutorDe, NomeAutorPara, Nom" +
                        "eAutorDe, NomeDDADe, NomeDDAPara {0}, {1}, {2} e {3}", nomeAutorDe, nomeAutorPara, nomeDDAPara, nomeDDADe), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 16
    testRunner.Then("visualizo os campos NomeAutorDe, NomeAutorPara, NomeAutorDe, NomeDDADe, NomeDDAPa" +
                    "ra em destaque para preenchimento.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Realizar uma Transferência de Controle Editorial (De/Para) com todos os campos em" +
            " branco, \" \"", new string[] {
                "chrome",
                "TransferenciaDeParaCT01"}, SourceLine=19)]
        public virtual void RealizarUmaTransferenciaDeControleEditorialDeParaComTodosOsCamposEmBranco_()
        {
#line 14
this.RealizarUmaTransferenciaDeControleEditorialDeParaComTodosOsCamposEmBranco("\" \"", "\" \"", "\" \"", "\" \"", ((string[])(null)));
#line hidden
        }
        
        public virtual void RealizarUmaTransferenciaDeControleEditorialDeParaComTodosOsCamposPreenchidos(string nomeAutorDe, string nomeAutorPara, string nomeDDADe, string nomeDDAPara, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Realizar uma Transferência de Controle Editorial (De/Para) com todos os campos pr" +
                    "eenchidos", null, @__tags);
#line 23
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 24
    testRunner.When(string.Format("realizo uma Transferência sem preencher os campos NomeAutorDe, NomeAutorPara, Nom" +
                        "eAutorDe, NomeDDADe, NomeDDAPara {0}, {1}, {2} e {3}", nomeAutorDe, nomeAutorPara, nomeDDAPara, nomeDDADe), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 25
    testRunner.Then(string.Format("visualizo a mensagem de confirmação de trasnferencia de Controle Editorial {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Realizar uma Transferência de Controle Editorial (De/Para) com todos os campos pr" +
            "eenchidos, \"RICARDO LEAO\"", new string[] {
                "chrome",
                "TransferenciaDeParaCT02"}, SourceLine=28)]
        public virtual void RealizarUmaTransferenciaDeControleEditorialDeParaComTodosOsCamposPreenchidos_RICARDOLEAO()
        {
#line 23
this.RealizarUmaTransferenciaDeControleEditorialDeParaComTodosOsCamposPreenchidos("\"RICARDO LEAO\"", "\"WILL HOLLAND\"", "\"DECK\"", "\"A DESCO\"", "\"Controles editoriais transferidos com sucesso e enviados ao GMUSIC.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void RealizarUmaTransferenciaDeControleEditorialDeParaComAutorQueNaoPossiuObrasNoDDAInformado(string nomeAutorDe, string nomeAutorPara, string nomeDDADe, string nomeDDAPara, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Realizar uma Transferência de Controle Editorial (De/Para) com Autor que não poss" +
                    "iu obras no DDA informado", null, @__tags);
#line 32
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 33
      testRunner.When(string.Format("realizo uma Transferência sem preencher os campos NomeAutorDe, NomeAutorPara, Nom" +
                        "eAutorDe, NomeDDADe, NomeDDAPara {0}, {1}, {2} e {3}", nomeAutorDe, nomeAutorPara, nomeDDAPara, nomeDDADe), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 34
      testRunner.Then(string.Format("visualizo a mensagem que o autor não possue obras no DDA informado {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Realizar uma Transferência de Controle Editorial (De/Para) com Autor que não poss" +
            "iu obras no DDA informado, \"Teste Autor\"", new string[] {
                "chrome",
                "TransferenciaDeParaCT03"}, SourceLine=37)]
        public virtual void RealizarUmaTransferenciaDeControleEditorialDeParaComAutorQueNaoPossiuObrasNoDDAInformado_TesteAutor()
        {
#line 32
this.RealizarUmaTransferenciaDeControleEditorialDeParaComAutorQueNaoPossiuObrasNoDDAInformado("\"Teste Autor\"", "\"TESTE INM Autor\"", "\"Aaron319736623\"", "\"A DESCO\"", "\"Autor não possui Obras no DDA informado.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void RealizarUmaTransferenciaDeControleEditorialDeParaComDeParaIguais(string nomeAutorDe, string nomeAutorPara, string nomeDDAPara, string nomeDDADe, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT04"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Realizar uma Transferência de Controle Editorial (De/Para) com (De/Para) iguais", null, @__tags);
#line 41
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 42
      testRunner.When(string.Format("realizo uma Transferência sem preencher os campos NomeAutorDe, NomeAutorPara, Nom" +
                        "eAutorDe, NomeDDADe, NomeDDAPara {0}, {1}, {2} e {3}", nomeAutorDe, nomeAutorPara, nomeDDAPara, nomeDDADe), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 43
      testRunner.Then(string.Format("visualizo a mensagem de operação cancelada {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Realizar uma Transferência de Controle Editorial (De/Para) com (De/Para) iguais, " +
            "\"RICARDO LEAO\"", new string[] {
                "chrome",
                "TransferenciaDeParaCT04"}, SourceLine=46)]
        public virtual void RealizarUmaTransferenciaDeControleEditorialDeParaComDeParaIguais_RICARDOLEAO()
        {
#line 41
this.RealizarUmaTransferenciaDeControleEditorialDeParaComDeParaIguais("\"RICARDO LEAO\"", "\"RICARDO LEAO\"", "\"DECK\"", "\"DECK\"", "\"Operação cancelada, não permitido fazer a transferência para o mesmo autor e mes" +
                    "mo DDA.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void RealizarUmaTransferenciaDeControleEditorialDeParaComAutorInexistente(string nomeAutorDe, string nomeAutorPara, string nomeDDADe, string nomeDDAPara, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaCT05"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Realizar uma Transferência de Controle Editorial (De/Para) com Autor inexistente", null, @__tags);
#line 50
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 51
      testRunner.When(string.Format("realizo uma Transferência sem preencher os campos NomeAutorDe, NomeAutorPara, Nom" +
                        "eAutorDe, NomeDDADe, NomeDDAPara {0}, {1}, {2} e {3}", nomeAutorDe, nomeAutorPara, nomeDDAPara, nomeDDADe), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 52
      testRunner.Then("visualizo a campo AutorDe em destaque para preenchimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Realizar uma Transferência de Controle Editorial (De/Para) com Autor inexistente," +
            " \"Teste Transferencia\"", new string[] {
                "chrome",
                "TransferenciaDeParaCT05"}, SourceLine=55)]
        public virtual void RealizarUmaTransferenciaDeControleEditorialDeParaComAutorInexistente_TesteTransferencia()
        {
#line 50
this.RealizarUmaTransferenciaDeControleEditorialDeParaComAutorInexistente("\"Teste Transferencia\"", "\"TESTE INM Autor\"", "\"Aaron319736623\"", "\"A DESCO\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
