// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Ferramenta
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("3.1.3 - Transferencia de DDA (De/Para)", new string[] {
            "kill_Driver",
            "Ferramentas",
            "TransferenciaDeParaDDA"}, SourceFile="Features\\Ferramenta\\3.1.3 - Transferência de DDA De-Para.feature", SourceLine=6)]
    public partial class _3_1_3_TransferenciaDeDDADeParaFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "3.1.3 - Transferência de DDA De-Para.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "3.1.3 - Transferencia de DDA (De/Para)", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Ferramentas",
                        "TransferenciaDeParaDDA"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 9
#line 10
    testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        public virtual void TransferenciaDeDDADePara(string nomeDDADe, string nomeDDAPara, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaDDACT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferência de DDA (De/Para)", null, @__tags);
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 14
 testRunner.Given("que a tela Transferência de DDA (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 15
    testRunner.When(string.Format("realizo uma Transferência preenchendo os campos NomeDDADe e NomeDDAPara {0} , {1}" +
                        "", nomeDDADe, nomeDDAPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 16
    testRunner.Then(string.Format("visualizo a mensagem de confirmação de trasferencia de DDA {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferência de DDA (De/Para), \"AMORINA\"", new string[] {
                "chrome",
                "TransferenciaDeParaDDACT01"}, SourceLine=19)]
        public virtual void TransferenciaDeDDADePara_AMORINA()
        {
#line 13
this.TransferenciaDeDDADePara("\"AMORINA\"", "\"JU MEDEIROS\"", "\"Dados alterados com sucesso e enviados ao GMUSIC.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeDDADeParaComTodosOsCamposEmBranco_(string nomeDDADe, string nomeDDAPara, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaDDACT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de DDA (De/Para) com todos os campos em branco.", null, @__tags);
#line 23
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 24
 testRunner.Given("que a tela Transferência de DDA (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 25
    testRunner.When(string.Format("realizo uma Transferência preenchendo os campos NomeDDADe e NomeDDAPara {0} , {1}" +
                        "", nomeDDADe, nomeDDAPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 26
    testRunner.Then("visualizo os campos NomeDDADe e NomeDDAPara em destaque para preenchimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de DDA (De/Para) com todos os campos em branco., \" \"", new string[] {
                "chrome",
                "TransferenciaDeParaDDACT02"}, SourceLine=29)]
        public virtual void TransferenciaDeDDADeParaComTodosOsCamposEmBranco__()
        {
#line 23
this.TransferenciaDeDDADeParaComTodosOsCamposEmBranco_("\" \"", "\" \"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeDDADeParaComNomeDDADeInexistente_(string nomeDDADe, string nomeDDAPara, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaDDACT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de DDA (De/Para) com Nome DDA(De) inexistente.", null, @__tags);
#line 33
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 34
 testRunner.Given("que a tela Transferência de DDA (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 35
    testRunner.When(string.Format("realizo uma Transferência preenchendo os campos NomeDDADe e NomeDDAPara {0} , {1}" +
                        "", nomeDDADe, nomeDDAPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 36
    testRunner.Then("visualizo os campos NomeDDADe em destaque para preenchimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de DDA (De/Para) com Nome DDA(De) inexistente., \"kdjsj\"", new string[] {
                "chrome",
                "TransferenciaDeParaDDACT03"}, SourceLine=39)]
        public virtual void TransferenciaDeDDADeParaComNomeDDADeInexistente__Kdjsj()
        {
#line 33
this.TransferenciaDeDDADeParaComNomeDDADeInexistente_("\"kdjsj\"", "\"NOWA\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeDDADeParaComNomeDDAParaInexistente_(string nomeDDADe, string nomeDDAPara, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaDDACT04"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de DDA (De/Para) com Nome DDA(Para) inexistente.", null, @__tags);
#line 43
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 44
 testRunner.Given("que a tela Transferência de DDA (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 45
    testRunner.When(string.Format("realizo uma Transferência preenchendo os campos NomeDDADe e NomeDDAPara {0} , {1}" +
                        "", nomeDDADe, nomeDDAPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 46
    testRunner.Then("visualizo os campos NomeDDAPara em destaque para preenchimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de DDA (De/Para) com Nome DDA(Para) inexistente., \"NOWA\"", new string[] {
                "chrome",
                "TransferenciaDeParaDDACT04"}, SourceLine=49)]
        public virtual void TransferenciaDeDDADeParaComNomeDDAParaInexistente__NOWA()
        {
#line 43
this.TransferenciaDeDDADeParaComNomeDDAParaInexistente_("\"NOWA\"", "\"jfjfj\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeDDADeParaSelecionoACheckBoxExcluir(string nomeDDAPara, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaDDACT05"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de DDA (De/Para) seleciono a CheckBox Excluir", null, @__tags);
#line 53
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 54
 testRunner.Given("que a tenho um DDA disponivel para exclusão", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 55
    testRunner.When(string.Format("realizo uma transferência de DDA preenchendo os campos NomeDDADe e NomeDDAPara <N" +
                        "omeDDADe> , {0}", nomeDDAPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 56
    testRunner.And("seleciono a CheckBox de exclusão de DDADe", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 57
 testRunner.Then(string.Format("visualizo a mensagem de confirmação de exclusão de DDADe {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de DDA (De/Para) seleciono a CheckBox Excluir, \"NOWA\"", new string[] {
                "chrome",
                "TransferenciaDeParaDDACT05"}, SourceLine=60)]
        public virtual void TransferenciaDeDDADeParaSelecionoACheckBoxExcluir_NOWA()
        {
#line 53
this.TransferenciaDeDDADeParaSelecionoACheckBoxExcluir("\"NOWA\"", "\"Dados alterados com sucesso e enviados ao GMUSIC.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeDDADeParaComNomeDDADeSemObras_(string nomeDDADe, string nomeDDAPara, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaDDACT06"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de DDA (De/Para) com Nome DDA(De) sem Obras.", null, @__tags);
#line 64
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 65
 testRunner.Given("que tenho um DDA sem obras", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 66
    testRunner.When(string.Format("realizo uma Transferência DDA sem obras preenchendo os campos NomeDDADe e NomeDDA" +
                        "Para {0} , {1}", nomeDDADe, nomeDDAPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 67
    testRunner.Then(string.Format("visualizo a mensagem de DDA não possui obras {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de DDA (De/Para) com Nome DDA(De) sem Obras., \" \"", new string[] {
                "chrome",
                "TransferenciaDeParaDDACT06"}, SourceLine=70)]
        public virtual void TransferenciaDeDDADeParaComNomeDDADeSemObras__()
        {
#line 64
this.TransferenciaDeDDADeParaComNomeDDADeSemObras_("\" \"", "\"NOWA\"", "\"DDA não possui Obras.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void TransferenciaDeDDADeParaComNomeDDADeParaIguais_(string nomeDDADe, string nomeDDAPara, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "TransferenciaDeParaDDACT07"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Transferencia de DDA (De/Para) com Nome DDA (De/Para) iguais.", null, @__tags);
#line 74
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 75
 testRunner.Given("que a tela Transferência de DDA (De/Para) esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 76
    testRunner.When(string.Format("realizo uma Transferência preenchendo os campos NomeDDADe e NomeDDAPara {0} , {1}" +
                        "", nomeDDADe, nomeDDAPara), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 77
    testRunner.Then(string.Format("visualizo a mensagem de DDA, operação cancelada {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Transferencia de DDA (De/Para) com Nome DDA (De/Para) iguais., \"AMORINA\"", new string[] {
                "chrome",
                "TransferenciaDeParaDDACT07"}, SourceLine=80)]
        public virtual void TransferenciaDeDDADeParaComNomeDDADeParaIguais__AMORINA()
        {
#line 74
this.TransferenciaDeDDADeParaComNomeDDADeParaIguais_("\"AMORINA\"", "\"AMORINA\"", "\"Operação cancelada, não permitido fazer a transferência para o mesmo DDA.\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
