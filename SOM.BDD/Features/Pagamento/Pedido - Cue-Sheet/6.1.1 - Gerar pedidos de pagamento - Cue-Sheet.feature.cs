// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Pagamento.Pedido_Cue_Sheet
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("6.1.1 - Gerar pedidos de pagamento - Cue-Sheet", new string[] {
            "kill_Driver",
            "PedidosPagamentoCueSheet",
            "Pedidos"}, SourceFile="Features\\Pagamento\\Pedido - Cue-Sheet\\6.1.1 - Gerar pedidos de pagamento - Cue-Sh" +
        "eet.feature", SourceLine=6)]
    public partial class _6_1_1_GerarPedidosDePagamento_Cue_SheetFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "6.1.1 - Gerar pedidos de pagamento - Cue-Sheet.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "6.1.1 - Gerar pedidos de pagamento - Cue-Sheet", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "PedidosPagamentoCueSheet",
                        "Pedidos"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 9
#line 10
 testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        public virtual void InclusaoDeNovoItem_PedidoJaExistenteParaAMesmaObraESincronismoExcetoAberturaETema(string tITULO, string uTITLIZACAO, string sINCRONISMO, string tEMPO, string tEMPO2, string tEMPOSOMADO, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "PedidosPagamentoCueSheetCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Inclusão de novo item - Pedido já existente para a mesma obra e sincronismo (Exce" +
                    "to Abertura e Tema)", null, @__tags);
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 14
 testRunner.Given("que tenha uma cue-sheet do genero jornalismo previamente cadastrada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 15
    testRunner.And(string.Format("que já existe pedido com os mesmos dados da cue-sheet {0}, {1}, {2}, {3}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 16
    testRunner.And(string.Format("incluo uma nova linha para um mesmo {0}, {1}, {2}, {3}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 17
    testRunner.When(string.Format("confirmo a geração de pedido para {0} e {1}", tITULO, sINCRONISMO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 18
    testRunner.Then(string.Format("visualizo o icone de pedido no item de cue-sheet com o pedido existente associado" +
                        " {0}, {1}, {2}, {3}, {4}, {5}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPOSOMADO, tEMPO, tEMPO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Inclusão de novo item - Pedido já existente para a mesma obra e sincronismo (Exce" +
            "to Abertura e Tema), \"TESTE DE 500MB\"", new string[] {
                "chrome",
                "PedidosPagamentoCueSheetCT01"}, SourceLine=21)]
        public virtual void InclusaoDeNovoItem_PedidoJaExistenteParaAMesmaObraESincronismoExcetoAberturaETema_TESTEDE500MB()
        {
#line 13
this.InclusaoDeNovoItem_PedidoJaExistenteParaAMesmaObraESincronismoExcetoAberturaETema("\"TESTE DE 500MB\"", "\"BK – BACKGROUND\"", "\"ABERTURA\"", "\"16\"", "\"25\"", "\"41\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void AlteracaoDeSincronismo_PedidoJaExistenteParaAMesmaObraESincronismo(string tITULO, string sINCRONISMO1, string tEMPOSOMADO, string sINCRONISMO2, string sINCRONISMO, string tEMPO, string tEMPO2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "PedidosPagamentoCueSheetCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alteração de sincronismo - Pedido já existente para a mesma obra e sincronismo", null, @__tags);
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 26
 testRunner.Given("que tenha uma cue-sheet do genero jornalismo previamente cadastrada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 27
 testRunner.And(string.Format("que eu tenha dois pedidos gerados para itens de cue-sheet com sincronismos difere" +
                        "ntes {0} E {1}", sINCRONISMO1, sINCRONISMO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 28
 testRunner.When(string.Format("altero o {0} para o mesmo de {1}", sINCRONISMO2, sINCRONISMO1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 29
    testRunner.Then(string.Format("visualizo o icone de pedido no item de cue-sheet com o pedido existente seleciona" +
                        "do {0}, {1}, {2}, {3}, {4}", tITULO, sINCRONISMO, tEMPOSOMADO, tEMPO, tEMPO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alteração de sincronismo - Pedido já existente para a mesma obra e sincronismo, \"" +
            "MUSICA DA MARCELLE\"", new string[] {
                "chrome",
                "PedidosPagamentoCueSheetCT02"}, SourceLine=32)]
        public virtual void AlteracaoDeSincronismo_PedidoJaExistenteParaAMesmaObraESincronismo_MUSICADAMARCELLE()
        {
#line 25
this.AlteracaoDeSincronismo_PedidoJaExistenteParaAMesmaObraESincronismo("\"MUSICA DA MARCELLE\"", "\"ADORNO\"", "\"41\"", "\"ENCERRAMENTO\"", "\"FUNDO\"", "\"16\"", "\"25\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void AlteracaoDeObra_PedidoJaExistenteParaAMesmaObraESincronismo(string tITULO1, string tITULO2, string sINCRONISMO, string tEMPOSOMADO, string sINCRONISMO2, string tEMPO, string tEMPO2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "PedidosPagamentoCueSheetCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alteração de obra - Pedido já existente para a mesma obra e sincronismo", null, @__tags);
#line 36
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 37
 testRunner.Given("que tenha uma cue-sheet do genero jornalismo previamente cadastrada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 38
 testRunner.And(string.Format("que eu tenha dois pedidos gerados para itens de cue-sheet com obras diferentes {0" +
                        "} e {1}", tITULO1, tITULO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 39
 testRunner.When(string.Format("altero a titulo da obra {0} para o mesmo da obra {1}", tITULO2, tITULO1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 40
    testRunner.Then(string.Format("visualizo o icone de pedido no item de cue-sheet com o pedido existente associado" +
                        " para {0}, {1}, {2}, {3}, {4}", tITULO1, sINCRONISMO2, tEMPOSOMADO, tEMPO, tEMPO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alteração de obra - Pedido já existente para a mesma obra e sincronismo, \"TESTE D" +
            "E 500MB\"", new string[] {
                "chrome",
                "PedidosPagamentoCueSheetCT03"}, SourceLine=43)]
        public virtual void AlteracaoDeObra_PedidoJaExistenteParaAMesmaObraESincronismo_TESTEDE500MB()
        {
#line 36
this.AlteracaoDeObra_PedidoJaExistenteParaAMesmaObraESincronismo("\"TESTE DE 500MB\"", "\"MUSICA TESTE\"", "\"ADORNO\"", "\"41\"", "\"FUNDO\"", "\"16\"", "\"25\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void NaoMarcarParaGerarPedidoLinhasDeABERTURAOuTEMA(string tITULO, string uTITLIZACAO, string sINCRONISMO, string sINCRONISMO2, string tEMPO, string tEMPO2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "PedidosPagamentoCueSheetCT04"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Não marcar para gerar pedido linhas de ABERTURA ou TEMA", null, @__tags);
#line 47
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 48
 testRunner.Given("que tenha uma cue-sheet do genero jornalismo previamente cadastrada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 49
 testRunner.And(string.Format("que possuo itens de sincronismo ABERTURA. {0}, {1}, {2}, {3}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 50
 testRunner.And(string.Format("possuo itens de sincronismo TEMA. {0}, {1}, {2}, {3}", tITULO, uTITLIZACAO, sINCRONISMO2, tEMPO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 51
 testRunner.When("acesso a tela de Gerar Pedido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 52
 testRunner.Then(string.Format("não visualizo os itens de ABERTURA {0} ou TEMA {1} selecionados. {2}, {3}, {4}", sINCRONISMO, sINCRONISMO2, tITULO, tEMPO, tEMPO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Não marcar para gerar pedido linhas de ABERTURA ou TEMA, \"TESTE DE 500MB\"", new string[] {
                "chrome",
                "PedidosPagamentoCueSheetCT04"}, SourceLine=55)]
        public virtual void NaoMarcarParaGerarPedidoLinhasDeABERTURAOuTEMA_TESTEDE500MB()
        {
#line 47
this.NaoMarcarParaGerarPedidoLinhasDeABERTURAOuTEMA("\"TESTE DE 500MB\"", "\"BK – BACKGROUND\"", "\"ABERTURA\"", "\"TEMA\"", "\"16\"", "\"25\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void NovoItemABERTURAOuTEMAValidoEmVariedadesOuJornalismoOuEsporteComPedidoExistente(string tITULO, string uTITLIZACAO, string sINCRONISMO, string tEMPO, string tEMPO2, string tEMPOSOMADO, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "PedidosPagamentoCueSheetCT05"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Novo item ABERTURA ou TEMA válido em Variedades ou Jornalismo ou Esporte com pedi" +
                    "do existente", null, @__tags);
#line 59
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 60
 testRunner.Given("que tenha uma cue-sheet do genero jornalismo previamente cadastrada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 61
 testRunner.And(string.Format("que existe um pedido de ABERTURA ou TEMA para {0}, {1}, {2}, {3}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 62
 testRunner.And(string.Format("que eu tenha criado um item novo item. {0}, {1}, {2}, {3}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 63
 testRunner.When("acesso a tela de Gerar Pedido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 64
 testRunner.Then("visualizo uma observação informando que existe pedido válido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line 65
 testRunner.And("visualizo o ícone para o pedido que será associado após a geração", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 66
    testRunner.When(string.Format("seleciono o item e confirmo a geração do pedido {0}, {1}, {2}, {3}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPOSOMADO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 67
    testRunner.Then(string.Format("visualizo o pedido existente associado ao item de cue-sheet {0}, {1}, {2}, {3}, {" +
                        "4}, {5}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPOSOMADO, tEMPO, tEMPO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Novo item ABERTURA ou TEMA válido em Variedades ou Jornalismo ou Esporte com pedi" +
            "do existente, \"TESTE DE 500MB\"", new string[] {
                "chrome",
                "PedidosPagamentoCueSheetCT05"}, SourceLine=70)]
        public virtual void NovoItemABERTURAOuTEMAValidoEmVariedadesOuJornalismoOuEsporteComPedidoExistente_TESTEDE500MB()
        {
#line 59
this.NovoItemABERTURAOuTEMAValidoEmVariedadesOuJornalismoOuEsporteComPedidoExistente("\"TESTE DE 500MB\"", "\"BK – BACKGROUND\"", "\"ABERTURA\"", "\"16\"", "\"25\"", "\"41\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void NovoItemABERTURAOuTEMAEmDramaturgiaComPedidoExistente(string tITULO, string uTITLIZACAO, string sINCRONISMO, string tEMPO, string tEMPO2, string tEMPOSOMADO, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "PedidosPagamentoCueSheetCT06"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Novo item ABERTURA ou TEMA em Dramaturgia com pedido existente", null, @__tags);
#line 74
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 75
 testRunner.Given("que tenha uma cue-sheet do genero Dramaturgia previamente cadastrada", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 76
 testRunner.And(string.Format("que existe um pedido de ABERTURA ou TEMA para {0}, {1}, {2}, {3}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 77
 testRunner.And(string.Format("que eu tenha criado um item novo item. {0}, {1}, {2}, {3}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 78
 testRunner.When("acesso a tela de Gerar Pedido", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 79
 testRunner.Then("visualizo o ícone para o pedido que será associado após a geração", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line 80
    testRunner.When(string.Format("seleciono o item e confirmo a geração do pedido {0}, {1}, {2}, {3}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPOSOMADO), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 81
 testRunner.Then(string.Format("visualizo o pedido existente associado ao item de cue-sheet {0}, {1}, {2}, {3}, {" +
                        "4}, {5}", tITULO, uTITLIZACAO, sINCRONISMO, tEMPOSOMADO, tEMPO, tEMPO2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Novo item ABERTURA ou TEMA em Dramaturgia com pedido existente, \"TESTE DE 500MB\"", new string[] {
                "chrome",
                "PedidosPagamentoCueSheetCT06"}, SourceLine=84)]
        public virtual void NovoItemABERTURAOuTEMAEmDramaturgiaComPedidoExistente_TESTEDE500MB()
        {
#line 74
this.NovoItemABERTURAOuTEMAEmDramaturgiaComPedidoExistente("\"TESTE DE 500MB\"", "\"BK – BACKGROUND\"", "\"ABERTURA\"", "\"16\"", "\"25\"", "\"41\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarPedidoSemItensAprovados(string produto, string episodio, string capitulo, string midia, string dia, string mes, string ano, string repriseRebatida, string obra, string utilizacao, string sincronismo, string tempo, string interprete, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "PedidosPagamentoCueSheetCT07"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar pedido sem itens aprovados", null, @__tags);
#line 89
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 90
    testRunner.Given(string.Format("que tenha uma Cue-Sheet cadastrada no sistema {0}, {1}, {2}, {3}, {4}, {5}, {6}, " +
                        "{7}", produto, episodio, capitulo, midia, dia, mes, ano, repriseRebatida), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 91
 testRunner.And(string.Format("que tenha um item cadastrado na Cue-Sheet {0}, {1}, {2}, {3}, {4}", obra, utilizacao, sincronismo, tempo, interprete), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 92
 testRunner.Then("visualizo apenas o icone para aprovar o item cadastrado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar pedido sem itens aprovados, \"Aleatório\"", new string[] {
                "chrome",
                "PedidosPagamentoCueSheetCT07"}, SourceLine=95)]
        public virtual void GerarPedidoSemItensAprovados_Aleatorio()
        {
#line 89
this.GerarPedidoSemItensAprovados("\"Aleatório\"", "\"Aleatório\"", "\"01\"", "\"GLOBONEWS\"", "\"12\"", "\"12\"", "\"2018\"", "\"Não\"", "\"Aleatório\"", "\"BK – BACKGROUND\"", "\"ABERTURA\"", "\"16\"", "\" \"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar pedido para planilha de cue-sheet 100% aprovada", new string[] {
                "chrome",
                "PedidosPagamentoCueSheetCT08"}, SourceLine=98)]
        public virtual void GerarPedidoParaPlanilhaDeCue_Sheet100Aprovada()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar pedido para planilha de cue-sheet 100% aprovada", null, new string[] {
                        "chrome",
                        "PedidosPagamentoCueSheetCT08"});
#line 99
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 100
     testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 101
  testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 102
  testRunner.And("que tenha uma cue-sheet cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 103
  testRunner.And("que tenha um item cadastrado na cue-sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 104
  testRunner.When("eu aprovo e crio um pedido para o item da Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 105
  testRunner.Then("visualizo o pedido cadastrado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
