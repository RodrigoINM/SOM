// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Pagamento.TabelaDePreco
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("6.5.3 - Consultar Tabela de Preços", new string[] {
            "kill_Driver",
            "ConsultaDeTabelaDePreco"}, SourceFile="Features\\Pagamento\\Tabela de Preço\\6.5.3 - Consultar Tabela de Preços.feature", SourceLine=5)]
    public partial class _6_5_3_ConsultarTabelaDePrecosFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "6.5.3 - Consultar Tabela de Preços.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "6.5.3 - Consultar Tabela de Preços", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "ConsultaDeTabelaDePreco"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line 9
 testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 10
 testRunner.And("que esteja na tela de consulta de tabela de preço", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        public virtual void BuscarTabelaPorUmCampoEmBrancoComSucesso(string nome, string inicioVigencia, string fimVigencia, string midia, string padrao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaDeTabelaDePrecoCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Buscar Tabela por um campo em branco com sucesso", null, @__tags);
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 14
 testRunner.When("faço uma busca rápida sem preencher nenhum campo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 15
 testRunner.Then(string.Format("visualizo uma grid com as tabelas cadastradas por ordem alfabetica no resultado d" +
                        "a busca {0}, {1}, {2}, {3}, {4}", nome, inicioVigencia, fimVigencia, midia, padrao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Buscar Tabela por um campo em branco com sucesso, \"UBEM 2020\"", new string[] {
                "chrome",
                "ConsultaDeTabelaDePrecoCT01"}, SourceLine=18)]
        public virtual void BuscarTabelaPorUmCampoEmBrancoComSucesso_UBEM2020()
        {
#line 13
this.BuscarTabelaPorUmCampoEmBrancoComSucesso("\"UBEM 2020\"", "\"01/01/2020\"", "\"31/12/2020\"", "\" \"", "\"Sim\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscarPorUmaTabelaDePrecoComSucesso(string nome, string inicioVigencia, string fimVigencia, string midia, string padrao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaDeTabelaDePrecoCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Buscar por uma tabela de preço com sucesso", null, @__tags);
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 23
    testRunner.When(string.Format("faço uma busca de tabela de preço por nome {0}", nome), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 24
 testRunner.Then(string.Format("visualizo os dados da tabela de preço no resultado da busca {0}, {1}, {2}, {3}, {" +
                        "4}", nome, inicioVigencia, fimVigencia, midia, padrao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Buscar por uma tabela de preço com sucesso, \"UBEM 2020\"", new string[] {
                "chrome",
                "ConsultaDeTabelaDePrecoCT02"}, SourceLine=27)]
        public virtual void BuscarPorUmaTabelaDePrecoComSucesso_UBEM2020()
        {
#line 22
this.BuscarPorUmaTabelaDePrecoComSucesso("\"UBEM 2020\"", "\"01/01/2020\"", "\"31/12/2020\"", "\" \"", "\"Sim\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscarComInformacaoNaoCadastrada(string nome, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaDeTabelaDePrecoCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Buscar com informação não cadastrada", null, @__tags);
#line 31
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 32
 testRunner.When(string.Format("faço uma busca por uma tabela de preço que não está cadastrada no sistema {0}", nome), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 33
 testRunner.Then(string.Format("visualizo a mensagem de dados não encontrados no resultado da busca por tabela de" +
                        " preço inexistente {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Buscar com informação não cadastrada, \"Tabela De Teste 2000\"", new string[] {
                "chrome",
                "ConsultaDeTabelaDePrecoCT03"}, SourceLine=36)]
        public virtual void BuscarComInformacaoNaoCadastrada_TabelaDeTeste2000()
        {
#line 31
this.BuscarComInformacaoNaoCadastrada("\"Tabela De Teste 2000\"", "\"Dados não encontratos\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscarComCombinacaoDeFiltrosComSucesso(string nome, string inicioVigencia, string fimVigencia, string midia, string padrao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaDeTabelaDePrecoCT04"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Buscar com combinação de filtros com sucesso", null, @__tags);
#line 40
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 41
 testRunner.When(string.Format("faço uma busca de tabela de preço por nome e midia {0}, {1}", nome, midia), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 42
 testRunner.Then(string.Format("visualizo os dados da tabela de preço no resultado da busca {0}, {1}, {2}, {3}, {" +
                        "4}", nome, inicioVigencia, fimVigencia, midia, padrao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Buscar com combinação de filtros com sucesso, \"UBEM - 2017\"", new string[] {
                "chrome",
                "ConsultaDeTabelaDePrecoCT04"}, SourceLine=45)]
        public virtual void BuscarComCombinacaoDeFiltrosComSucesso_UBEM_2017()
        {
#line 40
this.BuscarComCombinacaoDeFiltrosComSucesso("\"UBEM - 2017\"", "\"01/01/2017\"", "\"31/03/2018\"", "\"CANAL VIVA\"", "\"Não\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscarPorNomeComSucesso(string nome, string inicioVigencia, string fimVigencia, string midia, string padrao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaDeTabelaDePrecoCT05"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Buscar por Nome com sucesso", null, @__tags);
#line 49
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 50
    testRunner.When(string.Format("faço uma busca de tabela de preço por nome {0}", nome), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 51
 testRunner.Then(string.Format("visualizo os dados da tabela de preço no resultado da busca {0}, {1}, {2}, {3}, {" +
                        "4}", nome, inicioVigencia, fimVigencia, midia, padrao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Buscar por Nome com sucesso, \"UBEM - 2017\"", new string[] {
                "chrome",
                "ConsultaDeTabelaDePrecoCT05"}, SourceLine=54)]
        public virtual void BuscarPorNomeComSucesso_UBEM_2017()
        {
#line 49
this.BuscarPorNomeComSucesso("\"UBEM - 2017\"", "\"01/01/2017\"", "\"31/03/2018\"", "\"CANAL VIVA\"", "\"Não\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscarPorPorPeriodoComSucesso(string nome, string inicioVigencia, string fimVigencia, string midia, string padrao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaDeTabelaDePrecoCT06"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Buscar por por período com sucesso", null, @__tags);
#line 58
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 59
 testRunner.When(string.Format("faço uma busca de tabela de preço por inicio e fim de vigencia {0}, {1}", inicioVigencia, fimVigencia), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 60
 testRunner.Then(string.Format("visualizo os dados da tabela de preço no resultado da busca {0}, {1}, {2}, {3}, {" +
                        "4}", nome, inicioVigencia, fimVigencia, midia, padrao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Buscar por por período com sucesso, \"UBEM - 2017\"", new string[] {
                "chrome",
                "ConsultaDeTabelaDePrecoCT06"}, SourceLine=63)]
        public virtual void BuscarPorPorPeriodoComSucesso_UBEM_2017()
        {
#line 58
this.BuscarPorPorPeriodoComSucesso("\"UBEM - 2017\"", "\"01/01/2017\"", "\"31/03/2018\"", "\"CANAL VIVA\"", "\"Não\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscarPorInicioDeVigenciaComSucesso(string nome, string inicioVigencia, string fimVigencia, string midia, string padrao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaDeTabelaDePrecoCT07"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Buscar por inicio de vigência com sucesso", null, @__tags);
#line 67
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 68
    testRunner.When(string.Format("faço uma busca de tabela de preço por inicio de vigencia {0}", inicioVigencia), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 69
 testRunner.Then(string.Format("visualizo os dados da tabela de preço no resultado da busca {0}, {1}, {2}, {3}, {" +
                        "4}", nome, inicioVigencia, fimVigencia, midia, padrao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Buscar por inicio de vigência com sucesso, \"UBEM - 2017\"", new string[] {
                "chrome",
                "ConsultaDeTabelaDePrecoCT07"}, SourceLine=72)]
        public virtual void BuscarPorInicioDeVigenciaComSucesso_UBEM_2017()
        {
#line 67
this.BuscarPorInicioDeVigenciaComSucesso("\"UBEM - 2017\"", "\"01/01/2017\"", "\"31/03/2018\"", "\"CANAL VIVA\"", "\"Não\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscarPorFimDeVigenciaComSucesso(string nome, string inicioVigencia, string fimVigencia, string midia, string padrao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaDeTabelaDePrecoCT08"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Buscar por fim de vigência com sucesso", null, @__tags);
#line 76
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 77
    testRunner.When(string.Format("faço uma busca de tabela de preço por fim de vigencia {0}", fimVigencia), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 78
 testRunner.Then(string.Format("visualizo os dados da tabela de preço no resultado da busca {0}, {1}, {2}, {3}, {" +
                        "4}", nome, inicioVigencia, fimVigencia, midia, padrao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Buscar por fim de vigência com sucesso, \"UBEM - 2017\"", new string[] {
                "chrome",
                "ConsultaDeTabelaDePrecoCT08"}, SourceLine=81)]
        public virtual void BuscarPorFimDeVigenciaComSucesso_UBEM_2017()
        {
#line 76
this.BuscarPorFimDeVigenciaComSucesso("\"UBEM - 2017\"", "\"01/01/2017\"", "\"31/03/2018\"", "\"CANAL VIVA\"", "\"Não\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscarPorPadraoComSucesso(string nome, string inicioVigencia, string fimVigencia, string midia, string padrao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaDeTabelaDePrecoCT09"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Buscar por Padrão com sucesso", null, @__tags);
#line 85
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 86
    testRunner.When(string.Format("faço uma busca de tabela de preço por padrão {0}", padrao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 87
 testRunner.Then(string.Format("visualizo os dados da tabela de preço no resultado da busca {0}, {1}, {2}, {3}, {" +
                        "4}", nome, inicioVigencia, fimVigencia, midia, padrao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Buscar por Padrão com sucesso, \"UBEM - 2017\"", new string[] {
                "chrome",
                "ConsultaDeTabelaDePrecoCT09"}, SourceLine=90)]
        public virtual void BuscarPorPadraoComSucesso_UBEM_2017()
        {
#line 85
this.BuscarPorPadraoComSucesso("\"UBEM - 2017\"", "\"01/01/2017\"", "\"31/03/2018\"", "\"CANAL VIVA\"", "\"Não\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void LimparCamposDeBuscaComSucesso(string nome, string inicioVigencia, string fimVigencia, string midia, string padrao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaDeTabelaDePrecoCT10"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Limpar campos de busca com sucesso", null, @__tags);
#line 94
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 95
    testRunner.When(string.Format("que preencho os campos de busca por tabela de preço {0}, {1}, {2}, {3}, {4}", nome, inicioVigencia, fimVigencia, midia, padrao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 96
    testRunner.And("limpo os campos da consulta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 97
    testRunner.Then("visualizo os campos de busca sem preenchimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Limpar campos de busca com sucesso, \"UBEM - 2017\"", new string[] {
                "chrome",
                "ConsultaDeTabelaDePrecoCT10"}, SourceLine=100)]
        public virtual void LimparCamposDeBuscaComSucesso_UBEM_2017()
        {
#line 94
this.LimparCamposDeBuscaComSucesso("\"UBEM - 2017\"", "\"01/01/2017\"", "\"31/03/2018\"", "\"CANAL VIVA\"", "\"Não\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscarPorCamposNaoAssociados(string nome, string midia, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaDeTabelaDePrecoCT11"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Buscar por Campos não associados", null, @__tags);
#line 104
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 105
    testRunner.When(string.Format("faço uma busca de tabela de preço por nome e midia não associados entre si {0}, {" +
                        "1}", nome, midia), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 106
 testRunner.Then(string.Format("visualizo a mensagem de dados não encontrados no resultado da busca por tabela de" +
                        " preço por campos não associados entre si {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Buscar por Campos não associados, \"UBEM - 2017\"", new string[] {
                "chrome",
                "ConsultaDeTabelaDePrecoCT11"}, SourceLine=109)]
        public virtual void BuscarPorCamposNaoAssociados_UBEM_2017()
        {
#line 104
this.BuscarPorCamposNaoAssociados("\"UBEM - 2017\"", "\"DNI\"", "\"Dados não encontratos\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
