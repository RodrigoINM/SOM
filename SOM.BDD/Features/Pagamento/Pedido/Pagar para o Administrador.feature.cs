// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Pagamento.Pedido
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Pagar para o Administrador", new string[] {
            "kill_Driver",
            "Pedido",
            "PagarParaAdministrador"}, SourceFile="Features\\Pagamento\\Pedido\\Pagar para o Administrador.feature", SourceLine=5)]
    public partial class PagarParaOAdministradorFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Pagar para o Administrador.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "Pagar para o Administrador", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Pedido",
                        "PagarParaAdministrador"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line 9
    testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        public virtual void SelecaoDeDDAsQuePossuemAdministradorAssociado(string autor, string dDA, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "PagarParaAdministradorCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Seleção de DDAs que possuem Administrador associado", null, @__tags);
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 13
 testRunner.Given(string.Format("que tenha um pedido previamente cadastrado no sistema com apenas um autor e DDA n" +
                        "a composição {0}, {1}", autor, dDA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 14
 testRunner.When(string.Format("informo que o pagamento será feito ao Administrador do DDA do pedido {0}", autor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 15
 testRunner.Then(string.Format("visualizo o item do pedido marcado para pagamento ao administrador com sucesso {0" +
                        "}", autor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Seleção de DDAs que possuem Administrador associado, \"Abe1166196360\"", new string[] {
                "chrome",
                "PagarParaAdministradorCT01"}, SourceLine=18)]
        public virtual void SelecaoDeDDAsQuePossuemAdministradorAssociado_Abe1166196360()
        {
#line 12
this.SelecaoDeDDAsQuePossuemAdministradorAssociado("\"Abe1166196360\"", "\"KOBALT\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void MarcarPagamentoParaOAdministradorNoDetalheDoItemDePedido_Positivo(string autor, string dDA, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "PagarParaAdministradorCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Marcar pagamento para o administrador no detalhe do item de pedido - Positivo", null, @__tags);
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 23
    testRunner.Given(string.Format("que tenha um pedido previamente cadastrado no sistema com apenas um autor e DDA n" +
                        "a composição {0}, {1}", autor, dDA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 24
 testRunner.When(string.Format("informo que o pagamento será feito ao Administrador do DDA do pedido {0}", autor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 25
 testRunner.Then(string.Format("visualizo o item do pedido marcado para pagamento ao administrador com sucesso {0" +
                        "}", autor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Marcar pagamento para o administrador no detalhe do item de pedido - Positivo, \"A" +
            "be1166196360\"", new string[] {
                "chrome",
                "PagarParaAdministradorCT02"}, SourceLine=28)]
        public virtual void MarcarPagamentoParaOAdministradorNoDetalheDoItemDePedido_Positivo_Abe1166196360()
        {
#line 22
this.MarcarPagamentoParaOAdministradorNoDetalheDoItemDePedido_Positivo("\"Abe1166196360\"", "\"KOBALT\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void MarcarPagamentoParaOAdministradorNoDetalheDoItemDePedido_Negativo(string autor, string dDA, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "PagarParaAdministradorCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Marcar pagamento para o administrador no detalhe do item de pedido - Negativo", null, @__tags);
#line 32
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 33
 testRunner.Given(string.Format("que tenha um pedido previamente cadastrado no sistema com apenas um autor e DDA n" +
                        "a composição {0}, {1}", autor, dDA), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 34
 testRunner.But("nenhum item do pedido possui DDA com administrador", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Mas ");
#line 35
    testRunner.Then(string.Format("nao visualizo a opcao de pagar para o administrador {0}", autor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Marcar pagamento para o administrador no detalhe do item de pedido - Negativo, \"A" +
            "be1166196360\"", new string[] {
                "chrome",
                "PagarParaAdministradorCT03"}, SourceLine=38)]
        public virtual void MarcarPagamentoParaOAdministradorNoDetalheDoItemDePedido_Negativo_Abe1166196360()
        {
#line 32
this.MarcarPagamentoParaOAdministradorNoDetalheDoItemDePedido_Negativo("\"Abe1166196360\"", "\"Zachariah361645809\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
