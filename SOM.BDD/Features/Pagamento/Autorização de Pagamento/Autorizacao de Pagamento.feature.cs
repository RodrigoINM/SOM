// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Pagamento.AutorizacaoDePagamento
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("Consulta por autorização de pagamentos", new string[] {
            "kill_Driver",
            "ConsultaAutorizaçãoDePagamento"}, SourceFile="Features\\Pagamento\\Autorização de Pagamento\\Autorizacao de Pagamento.feature", SourceLine=5)]
    public partial class ConsultaPorAutorizacaoDePagamentosFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Autorizacao de Pagamento.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "Consulta por autorização de pagamentos", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "ConsultaAutorizaçãoDePagamento"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line 9
 testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 10
 testRunner.And("que esteja na tela de Autorizacao de Pagamentos", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        public virtual void BuscaRapidaPorNumeroDeAP(string aP, string lote, string lPE, string aR, string midia, string creditado, string valor, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaAutorizaçãoDePagamentoCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Busca rápida por número de AP", null, @__tags);
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 14
 testRunner.When(string.Format("faço uma busca rápida pelo número de AP {0}", aP), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 15
 testRunner.Then(string.Format("visualizo os dados da solicitação de pagamento para pedido no resultado da busca " +
                        "{0}, {1}, {2}, {3}, {4}, {5}, {6}", aP, lote, lPE, aR, midia, creditado, valor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Busca rápida por número de AP, \"1003194\"", new string[] {
                "chrome",
                "ConsultaAutorizaçãoDePagamentoCT01"}, SourceLine=18)]
        public virtual void BuscaRapidaPorNumeroDeAP_1003194()
        {
#line 13
this.BuscaRapidaPorNumeroDeAP("\"1003194\"", "\"1000319\"", "\"307370\"", "\"290407\"", "\"GLOBONEWS\"", "\"Hildegard1167235435\"", "\"R$ 47,25\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscaPorAPInicialEAPFinal(string aPInicial, string aPFinal, string aP, string lote, string lPE, string aR, string midia, string creditado, string valor, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaAutorizaçãoDePagamentoCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Busca por AP inicial e AP final", null, @__tags);
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 23
 testRunner.When(string.Format("faço uma busca avançada de solicitações de pedidos para pagamento por AP Inicial " +
                        "e AP Final {0}, {1}", aPInicial, aPFinal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 24
 testRunner.Then(string.Format("visualizo os dados da solicitação de pagamento para pedido no resultado da busca " +
                        "{0}, {1}, {2}, {3}, {4}, {5}, {6}", aP, lote, lPE, aR, midia, creditado, valor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Busca por AP inicial e AP final, \"1003194\"", new string[] {
                "chrome",
                "ConsultaAutorizaçãoDePagamentoCT02"}, SourceLine=27)]
        public virtual void BuscaPorAPInicialEAPFinal_1003194()
        {
#line 22
this.BuscaPorAPInicialEAPFinal("\"1003194\"", "\"1003194\"", "\"1003194\"", "\"1000319\"", "\"307370\"", "\"290407\"", "\"GLOBONEWS\"", "\"Hildegard1167235435\"", "\"R$ 47,25\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscaPorLoteInicialELoteFinal(string loteInicial, string loteFinal, string aP, string lote, string lPE, string aR, string midia, string creditado, string valor, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaAutorizaçãoDePagamentoCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Busca por Lote inicial e Lote final", null, @__tags);
#line 31
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 32
 testRunner.When(string.Format("faço uma busca avançada de solicitações de pedidos para pagamento por Lote Inicia" +
                        "l e Lote Final {0}, {1}", loteInicial, loteFinal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 33
 testRunner.Then(string.Format("visualizo os dados da solicitação de pagamento para pedido no resultado da busca " +
                        "{0}, {1}, {2}, {3}, {4}, {5}, {6}", aP, lote, lPE, aR, midia, creditado, valor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Busca por Lote inicial e Lote final, \"1000319\"", new string[] {
                "chrome",
                "ConsultaAutorizaçãoDePagamentoCT03"}, SourceLine=36)]
        public virtual void BuscaPorLoteInicialELoteFinal_1000319()
        {
#line 31
this.BuscaPorLoteInicialELoteFinal("\"1000319\"", "\"1000319\"", "\"1003194\"", "\"1000319\"", "\"307370\"", "\"290407\"", "\"GLOBONEWS\"", "\"Hildegard1167235435\"", "\"R$ 47,25\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscaPorNumeroDoPedidoInicialENumeroDoPedidoFinal(string numeroPedidoInicial, string numeroPedidoFinal, string aP, string lote, string lPE, string aR, string midia, string creditado, string valor, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaAutorizaçãoDePagamentoCT04"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Busca por Numero do pedido inicial e Numero do pedido final", null, @__tags);
#line 40
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 41
 testRunner.When(string.Format("faço uma busca avançada de solicitações de pedidos para pagamento por Número Pedi" +
                        "do Inicial e Número Pedido Final {0}, {1}", numeroPedidoInicial, numeroPedidoFinal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 42
 testRunner.Then(string.Format("visualizo os dados da solicitação de pagamento para pedido no resultado da busca " +
                        "{0}, {1}, {2}, {3}, {4}, {5}, {6}", aP, lote, lPE, aR, midia, creditado, valor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Busca por Numero do pedido inicial e Numero do pedido final, \"1001404\"", new string[] {
                "chrome",
                "ConsultaAutorizaçãoDePagamentoCT04"}, SourceLine=45)]
        public virtual void BuscaPorNumeroDoPedidoInicialENumeroDoPedidoFinal_1001404()
        {
#line 40
this.BuscaPorNumeroDoPedidoInicialENumeroDoPedidoFinal("\"1001404\"", "\"1001404\"", "\"1003194\"", "\"1000319\"", "\"307370\"", "\"290407\"", "\"GLOBONEWS\"", "\"Hildegard1167235435\"", "\"R$ 47,25\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscaPorDDAENumeroDePedidoInicial(string numeroPedidoInicial, string aP, string lote, string lPE, string aR, string midia, string creditado, string valor, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaAutorizaçãoDePagamentoCT05"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Busca por DDA e numero de pedido inicial", null, @__tags);
#line 49
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 50
    testRunner.When(string.Format("faço uma busca avançada de solicitações de pedidos para pagamento por DDA e Númer" +
                        "o Pedido Inicial <DDA>, {0}", numeroPedidoInicial), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 51
    testRunner.Then(string.Format("visualizo os dados da solicitação de pagamento para pedido no resultado da busca " +
                        "{0}, {1}, {2}, {3}, {4}, {5}, {6}", aP, lote, lPE, aR, midia, creditado, valor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Busca por DDA e numero de pedido inicial, \"1001404\"", new string[] {
                "chrome",
                "ConsultaAutorizaçãoDePagamentoCT05"}, SourceLine=54)]
        public virtual void BuscaPorDDAENumeroDePedidoInicial_1001404()
        {
#line 49
this.BuscaPorDDAENumeroDePedidoInicial("\"1001404\"", "\"1003194\"", "\"1000319\"", "\"307370\"", "\"290407\"", "\"GLOBONEWS\"", "\"Hildegard1167235435\"", "\"R$ 47,25\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscaPorARENumeroDePedidoInicial(string numeroPedidoInicial, string aP, string lote, string lPE, string aR, string midia, string creditado, string valor, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaAutorizaçãoDePagamentoCT06"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Busca por AR e numero de pedido inicial", null, @__tags);
#line 58
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 59
    testRunner.When(string.Format("faço uma busca avançada de solicitações de pedidos para pagamento por AR e Número" +
                        " Pedido Inicial {0}, {1}", aR, numeroPedidoInicial), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 60
    testRunner.Then(string.Format("visualizo os dados da solicitação de pagamento para pedido no resultado da busca " +
                        "{0}, {1}, {2}, {3}, {4}, {5}, {6}", aP, lote, lPE, aR, midia, creditado, valor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Busca por AR e numero de pedido inicial, \"1001404\"", new string[] {
                "chrome",
                "ConsultaAutorizaçãoDePagamentoCT06"}, SourceLine=63)]
        public virtual void BuscaPorARENumeroDePedidoInicial_1001404()
        {
#line 58
this.BuscaPorARENumeroDePedidoInicial("\"1001404\"", "\"1003194\"", "\"1000319\"", "\"307370\"", "\"290407\"", "\"GLOBONEWS\"", "\"Hildegard1167235435\"", "\"R$ 47,25\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void BuscaPorDataInicialDaAPEDataFinalDaAP(string numeroPedidoInicial, string aP, string lote, string lPE, string aR, string midia, string creditado, string valor, string dataInicialAp, string dataFinalAp, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultaAutorizaçãoDePagamentoCT07"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Busca por data inicial da AP e data final da AP", null, @__tags);
#line 67
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 68
     testRunner.When(string.Format("faço uma busca avançada de solicitações de pedidos para pagamento por Data Inicia" +
                        "l da Ap e Data Final da Ap {0}, {1}, {2}", dataInicialAp, dataFinalAp, numeroPedidoInicial), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 69
    testRunner.Then(string.Format("visualizo os dados da solicitação de pagamento para pedido no resultado da busca " +
                        "{0}, {1}, {2}, {3}, {4}, {5}, {6}", aP, lote, lPE, aR, midia, creditado, valor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Busca por data inicial da AP e data final da AP, \"1001404\"", new string[] {
                "chrome",
                "ConsultaAutorizaçãoDePagamentoCT07"}, SourceLine=72)]
        public virtual void BuscaPorDataInicialDaAPEDataFinalDaAP_1001404()
        {
#line 67
this.BuscaPorDataInicialDaAPEDataFinalDaAP("\"1001404\"", "\"1003194\"", "\"1000319\"", "\"307370\"", "\"290407\"", "\"GLOBONEWS\"", "\"Hildegard1167235435\"", "\"R$ 47,25\"", "\"25/01/2019\"", "\"25/01/2019\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
