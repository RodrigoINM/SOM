// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Obra
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("3.1.3 - Alterar Composição", new string[] {
            "kill_Driver",
            "Obra",
            "AlterarComposicao"}, SourceFile="Features\\Obra\\3.1.3 - Alterar Composição.feature", SourceLine=6)]
    public partial class _3_1_3_AlterarComposicaoFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "3.1.3 - Alterar Composição.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "3.1.3 - Alterar Composição", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Obra",
                        "AlterarComposicao"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 9
#line 10
    testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 11
    testRunner.And("que esteja na tela de Obras", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        public virtual void ValidarAlteracaoDeAutorDDAEVersionistaDaComposicao(string autor, string dDA, string versionista, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultarComposicaoCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar alteração de Autor, DDA e Versionista da composição", null, @__tags);
#line 14
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 15
 testRunner.Given("que esteja na tela Edição de Obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 16
    testRunner.When(string.Format("altero os valores de Autor, DDA , Versionista e salvo a composicao {0}, {1} e {2}" +
                        "", autor, dDA, versionista), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 17
    testRunner.Then(string.Format("visualizo a mensagem de alteração da obra com sucesso {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar alteração de Autor, DDA e Versionista da composição, \"Teste Autor Teste\"", new string[] {
                "chrome",
                "ConsultarComposicaoCT01"}, SourceLine=20)]
        public virtual void ValidarAlteracaoDeAutorDDAEVersionistaDaComposicao_TesteAutorTeste()
        {
#line 14
this.ValidarAlteracaoDeAutorDDAEVersionistaDaComposicao("\"Teste Autor Teste\"", "\"SOM LIVRE\"", "\"Sim\"", "\"Dados alterados com sucesso e enviados ao GMUSIC.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarAMensagemDePercentualDaComposicaoSuperiorA100(string percentual, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultarComposicaoCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("validar a mensagem de percentual da composição superior a 100%", null, @__tags);
#line 24
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 25
    testRunner.Given("que esteja na tela Edição de Obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 26
 testRunner.When(string.Format("altero e salvo o percentual da composição superior ao permitido {0}", percentual), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 27
 testRunner.Then(string.Format("visualizo a mensagem Percentual {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("validar a mensagem de percentual da composição superior a 100%, \"110\"", new string[] {
                "chrome",
                "ConsultarComposicaoCT02"}, SourceLine=30)]
        public virtual void ValidarAMensagemDePercentualDaComposicaoSuperiorA100_110()
        {
#line 24
this.ValidarAMensagemDePercentualDaComposicaoSuperiorA100("\"110\"", "\"Percentual superior a 100%.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarAMensagemDePercentualDaComposicaoInferiorA100(string percentual, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultarComposicaoCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar a mensagem de percentual da composição inferior a 100%", null, @__tags);
#line 34
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 35
 testRunner.Given("que esteja na tela Edição de Obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 36
    testRunner.When(string.Format("altero e salvo o percentual da composição inferior ao permitido {0}", percentual), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 37
    testRunner.Then(string.Format("visualizo a mensagem Percentual {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar a mensagem de percentual da composição inferior a 100%, \"0\"", new string[] {
                "chrome",
                "ConsultarComposicaoCT03"}, SourceLine=40)]
        public virtual void ValidarAMensagemDePercentualDaComposicaoInferiorA100_0()
        {
#line 34
this.ValidarAMensagemDePercentualDaComposicaoInferiorA100("\"0\"", "\"Percentual precisa ser maior que 0%\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("validar alteração de duplicidade na composição", new string[] {
                "chrome",
                "ConsultarComposicaoCT04"}, SourceLine=43)]
        public virtual void ValidarAlteracaoDeDuplicidadeNaComposicao()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("validar alteração de duplicidade na composição", null, new string[] {
                        "chrome",
                        "ConsultarComposicaoCT04"});
#line 44
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 45
    testRunner.Given("que esteja na tela Edição de Obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 46
    testRunner.When("altero e salvo o a duplicidade da obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 47
    testRunner.Then("visualizo o icone em destaque", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void AlterarDadosDaObraComCriacaoDeNovoDDAComAssociacao(string associacao, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "ConsultarComposicaoCT05"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alterar dados da obra com criação de novo DDA com associação", null, @__tags);
#line 50
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 51
    testRunner.Given("que esteja na tela Edição de Obra", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 52
    testRunner.When(string.Format("salvo a alteracao de DDA com {0}", associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 53
    testRunner.Then(string.Format("visualizo a mensagem de DDA {0} com sucesso", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar dados da obra com criação de novo DDA com associação, \"UBEM\"", new string[] {
                "chrome",
                "ConsultarComposicaoCT05"}, SourceLine=56)]
        public virtual void AlterarDadosDaObraComCriacaoDeNovoDDAComAssociacao_UBEM()
        {
#line 50
this.AlterarDadosDaObraComCriacaoDeNovoDDAComAssociacao("\"UBEM\"", "\"Registro salvo com sucesso.\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar dados da obra com criação de novo DDA com associação, \"SEM ASSOCIAÇÃO\"", new string[] {
                "chrome",
                "ConsultarComposicaoCT05"}, SourceLine=56)]
        public virtual void AlterarDadosDaObraComCriacaoDeNovoDDAComAssociacao_SEMASSOCIACAO()
        {
#line 50
this.AlterarDadosDaObraComCriacaoDeNovoDDAComAssociacao("\"SEM ASSOCIAÇÃO\"", "\"Registro salvo com sucesso.\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
