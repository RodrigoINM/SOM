// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.Obra.Autor
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("3.1.5 - Alterar Autor", new string[] {
            "kill_Driver",
            "Autor",
            "AlterarAutor"}, SourceFile="Features\\Obra\\Autor\\3.1.5 - Alterar Autor.feature", SourceLine=6)]
    public partial class _3_1_5_AlterarAutorFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "3.1.5 - Alterar Autor.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "3.1.5 - Alterar Autor", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "Autor",
                        "AlterarAutor"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 9
#line 10
 testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        public virtual void AlterarAutorCadastrado(string nomeDeAlterarAutor, string nomeArtistico, string nomeCompleto, string mensagemdeAlteracao, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "AlterarAutorCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alterar Autor cadastrado", null, @__tags);
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 14
 testRunner.When(string.Format("faco uma busca por {0}", nomeDeAlterarAutor), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 15
    testRunner.And(string.Format("altero os dados {0}, {1} do autor", nomeArtistico, nomeCompleto), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 16
 testRunner.Then(string.Format("a {0} e apresentada conforme alteracao do {1}", mensagemdeAlteracao, nomeArtistico), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar Autor cadastrado, \"Teste Automatizado\"", new string[] {
                "chrome",
                "AlterarAutorCT01"}, SourceLine=19)]
        public virtual void AlterarAutorCadastrado_TesteAutomatizado()
        {
#line 13
this.AlterarAutorCadastrado("\"Teste Automatizado\"", "\"Teste Automatizado ALTERADO\"", "\"Teste Automatizado COMPLETO ALTERADO\"", "\"Dados alterados com sucesso e enviados ao GMUSIC.\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
