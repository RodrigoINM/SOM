// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.UsoEReporte.RelatorioECAD
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("5.6.1 - Gerar Relatório ECAD", new string[] {
            "kill_Driver",
            "RelatorioECAD"}, SourceFile="Features\\UsoEReporte\\RelatorioECAD\\Gerar Relatório ECAD.feature", SourceLine=6)]
    public partial class _5_6_1_GerarRelatorioECADFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Gerar Relatório ECAD.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "5.6.1 - Gerar Relatório ECAD", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "RelatorioECAD"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 9
#line 10
 testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 11
 testRunner.And("a tela de Relatorio ECAD esteja aberta", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        public virtual void GerarDownloadRelatorioECADSemFechamentoMensal(string tipo, string mes, string ano, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar download relatório ECAD sem fechamento mensal", null, @__tags);
#line 14
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 15
    testRunner.When(string.Format("filtro um relatorio ECAD preenchendo o campo tipo e o periodo {0}, {1} , {2}", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 16
 testRunner.Then(string.Format("visualizo que a mensagem do relatorio que não possue fechamento mensal {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar download relatório ECAD sem fechamento mensal, Variant 0", new string[] {
                "chrome",
                "RelatorioECADCT01"}, SourceLine=19)]
        public virtual void GerarDownloadRelatorioECADSemFechamentoMensal_Variant0()
        {
#line 14
this.GerarDownloadRelatorioECADSemFechamentoMensal("\"Mensal\"", "\"Dezembro\"", "\"2018\"", "\"Não existe fechamento para o período selecionado.\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar download relatório ECAD sem fechamento mensal, Variant 1", new string[] {
                "chrome",
                "RelatorioECADCT01"}, SourceLine=19)]
        public virtual void GerarDownloadRelatorioECADSemFechamentoMensal_Variant1()
        {
#line 14
this.GerarDownloadRelatorioECADSemFechamentoMensal("\"Mensal\"", "\"Outubro\"", "\"2018\"", "\"Não existe fechamento para o período selecionado.\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar download relatório ECAD sem fechamento mensal, Variant 2", new string[] {
                "chrome",
                "RelatorioECADCT01"}, SourceLine=19)]
        public virtual void GerarDownloadRelatorioECADSemFechamentoMensal_Variant2()
        {
#line 14
this.GerarDownloadRelatorioECADSemFechamentoMensal("\"Mensal\"", "\"Julho\"", "\"2018\"", "\"Não existe fechamento para o período selecionado.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioMensalECADEmExcel(
                    string tipo, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string nomedoEpisodio, 
                    string diretor, 
                    string ordemExecucao, 
                    string titulodaObraMusica, 
                    string tipodeMusica, 
                    string autor, 
                    string interprete, 
                    string segundos, 
                    string classificacao, 
                    string compositores, 
                    string editora, 
                    string gravadora, 
                    string submix, 
                    string nomePlanilha, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório mensal ECAD em Excel", null, @__tags);
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 26
    testRunner.When(string.Format("filtro um relatorio ECAD preenchendo o campo tipo e o periodo {0}, {1} , {2}", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 27
 testRunner.Then(string.Format("gero um relatorio ECAD e verifico as informações {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} estao sendo exibidas " +
                        "corretamente para o filtro {17}, {18} escolhidos", programa, dataExibicao, capitulo, nomedoEpisodio, diretor, ordemExecucao, titulodaObraMusica, tipodeMusica, autor, interprete, segundos, classificacao, compositores, editora, gravadora, submix, nomePlanilha, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório mensal ECAD em Excel, Variant 0", new string[] {
                "chrome",
                "RelatorioECADCT02"}, SourceLine=30)]
        public virtual void GerarNovoRelatorioMensalECADEmExcel_Variant0()
        {
#line 25
this.GerarNovoRelatorioMensalECADEmExcel("\"Mensal\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\" \"", "\"1\"", "\"NOVA MUSICA HELEN\"", "\"BIBLIOTECA MUSICAL\"", "\"TESTA\"", "\"ANITTA\"", "\"10\"", "\"TM\"", "\" \"", "\"HELEN PRODUCOES\"", "\" \"", "\" \"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório mensal ECAD em Excel, Variant 1", new string[] {
                "chrome",
                "RelatorioECADCT02"}, SourceLine=30)]
        public virtual void GerarNovoRelatorioMensalECADEmExcel_Variant1()
        {
#line 25
this.GerarNovoRelatorioMensalECADEmExcel("\"Mensal\"", "\"Agosto\"", "\"2018\"", "\"VIDAS DE MANUELLA\"", "\"01/08/2018\"", "\"2\"", "\" \"", "\" \"", "\"1\"", "\"KINGDOM\"", "\"MUSICA COMERCIAL\"", "\"ALYNE WAITE,CARLOS A DE OLIVEIRA,JORDAM CRITZ\"", "\"JORDAM CRITZ\"", "\"25\"", "\"BK\"", "\" \"", "\"A DESCOBRIR,INDEPENDENTE,INDEPENDENTE\"", "\"RGE\"", "\" \"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioComplementoECADEmExcel(
                    string tipo, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string nomedoEpisodio, 
                    string diretor, 
                    string ordemExecucao, 
                    string titulodaObraMusica, 
                    string tipodeMusica, 
                    string autor, 
                    string interprete, 
                    string segundos, 
                    string classificacao, 
                    string compositores, 
                    string editora, 
                    string gravadora, 
                    string submix, 
                    string nomePlanilha, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório Complemento ECAD em Excel", null, @__tags);
#line 35
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 36
    testRunner.When(string.Format("filtro um relatorio ECAD preenchendo o campo tipo e o periodo {0}, {1} , {2}", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 37
 testRunner.Then(string.Format("gero um relatorio ECAD e verifico as informações {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} estao sendo exibidas " +
                        "corretamente para o filtro {17}, {18} escolhidos", programa, dataExibicao, capitulo, nomedoEpisodio, diretor, ordemExecucao, titulodaObraMusica, tipodeMusica, autor, interprete, segundos, classificacao, compositores, editora, gravadora, submix, nomePlanilha, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório Complemento ECAD em Excel, Variant 0", new string[] {
                "chrome",
                "RelatorioECADCT03"}, SourceLine=40)]
        public virtual void GerarNovoRelatorioComplementoECADEmExcel_Variant0()
        {
#line 35
this.GerarNovoRelatorioComplementoECADEmExcel("\"Complemento\"", "\"Outubro\"", "\"2018\"", "\"ANTENA PAULISTA\"", "\"25/10/2018\"", "\"10012010\"", "\"REPRISE\"", "\" \"", "\"1\"", "\"MUSICA DA MARCELLE\"", "\"MUSICA COMERCIAL\"", "\"MARCELLE MENDONCA,MARCELLE MENDONCA,SHAKIRA MEBARAK\"", "\"DANIEL MUSY\"", "\"40\"", "\"TA\"", "\" \"", "\"EMI SONGS,SOM E LUZ,A DESCOBRIR\"", "\"RGE\"", "\"FULL MIX\"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório Complemento ECAD em Excel, Variant 1", new string[] {
                "chrome",
                "RelatorioECADCT03"}, SourceLine=40)]
        public virtual void GerarNovoRelatorioComplementoECADEmExcel_Variant1()
        {
#line 35
this.GerarNovoRelatorioComplementoECADEmExcel("\"Complemento\"", "\"Setembro\"", "\"2018\"", "\"JORNAL NACIONAL\"", "\" \"", "\" \"", "\" \"", "\" \"", "\"1\"", "\"PROBLEMA SEU\"", "\"MUSICA COMERCIAL\"", "\"FELIPE CORDEIRO,MANOEL CORDEIRO\"", "\"ANITTA\"", "\"10\"", "\"BK\"", "\" \"", "\"A DESCOBRIR,DUBAS,DUBAS\"", "\" \"", "\" \"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarRelatorioECADMensalPeloFiltroProduto_(
                    string tipo, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string nomedoEpisodio, 
                    string diretor, 
                    string ordemExecucao, 
                    string titulodaObraMusica, 
                    string tipodeMusica, 
                    string autor, 
                    string interprete, 
                    string segundos, 
                    string classificacao, 
                    string compositores, 
                    string editora, 
                    string gravadora, 
                    string submix, 
                    string nomePlanilha, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT04"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar relatório ECAD mensal pelo filtro Produto.", null, @__tags);
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 46
    testRunner.When(string.Format("filtro um relatorio ECAD preenchendo o campo tipo periodo {0}, {1} , {2} e produt" +
                        "o", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 47
 testRunner.Then(string.Format("gero um relatorio ECAD e verifico as informações {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} estao sendo exibidas " +
                        "corretamente para o filtro {17}, {18} escolhidos", programa, dataExibicao, capitulo, nomedoEpisodio, diretor, ordemExecucao, titulodaObraMusica, tipodeMusica, autor, interprete, segundos, classificacao, compositores, editora, gravadora, submix, nomePlanilha, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório ECAD mensal pelo filtro Produto., \"Mensal\"", new string[] {
                "chrome",
                "RelatorioECADCT04"}, SourceLine=50)]
        public virtual void GerarRelatorioECADMensalPeloFiltroProduto__Mensal()
        {
#line 45
this.GerarRelatorioECADMensalPeloFiltroProduto_("\"Mensal\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\" \"", "\"1\"", "\"NOVA MUSICA HELEN\"", "\"BIBLIOTECA MUSICAL\"", "\"TESTA\"", "\"ANITTA\"", "\"10\"", "\"TM\"", "\" \"", "\"HELEN PRODUCOES\"", "\" \"", "\" \"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarRelatorioECADComplementoPeloFiltroProduto_(
                    string tipo, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string nomedoEpisodio, 
                    string diretor, 
                    string ordemExecucao, 
                    string titulodaObraMusica, 
                    string tipodeMusica, 
                    string autor, 
                    string interprete, 
                    string segundos, 
                    string classificacao, 
                    string compositores, 
                    string editora, 
                    string gravadora, 
                    string submix, 
                    string nomePlanilha, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT05"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar relatório ECAD Complemento pelo filtro Produto.", null, @__tags);
#line 55
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 56
    testRunner.When(string.Format("filtro um relatorio ECAD complemento preenchendo o campo tipo periodo {0}, {1} , " +
                        "{2} e produto", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 57
 testRunner.Then(string.Format("gero um relatorio ECAD e verifico as informações {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} estao sendo exibidas " +
                        "corretamente para o filtro {17}, {18} escolhidos", programa, dataExibicao, capitulo, nomedoEpisodio, diretor, ordemExecucao, titulodaObraMusica, tipodeMusica, autor, interprete, segundos, classificacao, compositores, editora, gravadora, submix, nomePlanilha, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório ECAD Complemento pelo filtro Produto., \"Complemento\"", new string[] {
                "chrome",
                "RelatorioECADCT05"}, SourceLine=60)]
        public virtual void GerarRelatorioECADComplementoPeloFiltroProduto__Complemento()
        {
#line 55
this.GerarRelatorioECADComplementoPeloFiltroProduto_("\"Complemento\"", "\"Outubro\"", "\"2018\"", "\"ANTENA PAULISTA\"", "\"25/10/2018\"", "\"10012010\"", "\"REPRISE\"", "\" \"", "\"1\"", "\"MUSICA DA MARCELLE\"", "\"MUSICA COMERCIAL\"", "\"MARCELLE MENDONCA,MARCELLE MENDONCA,SHAKIRA MEBARAK\"", "\"DANIEL MUSY\"", "\"40\"", "\"TA\"", "\"\"", "\"EMI SONGS,SOM E LUZ,A DESCOBRIR\"", "\"RGE\"", "\"FULL MIX\"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarHistoricoDoRelatorioECAD(
                    string tipo, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string nomedoEpisodio, 
                    string diretor, 
                    string ordemExecucao, 
                    string titulodaObraMusica, 
                    string tipodeMusica, 
                    string autor, 
                    string interprete, 
                    string segundos, 
                    string classificacao, 
                    string compositores, 
                    string editora, 
                    string gravadora, 
                    string submix, 
                    string nomePlanilha, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT06"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar histórico do relatorio ECAD", null, @__tags);
#line 64
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 65
testRunner.When(string.Format("filtro um relatorio ECAD preenchendo o campo tipo e o periodo {0}, {1} , {2}", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 66
 testRunner.Then(string.Format("gero um relatorio ECAD e verifico as informações {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} estao sendo exibidas " +
                        "corretamente para o filtro {17}, {18} escolhidos", programa, dataExibicao, capitulo, nomedoEpisodio, diretor, ordemExecucao, titulodaObraMusica, tipodeMusica, autor, interprete, segundos, classificacao, compositores, editora, gravadora, submix, nomePlanilha, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 67
 testRunner.And("valido o historico do reletorio ECAD", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar histórico do relatorio ECAD, \"Mensal\"", new string[] {
                "chrome",
                "RelatorioECADCT06"}, SourceLine=70)]
        public virtual void ValidarHistoricoDoRelatorioECAD_Mensal()
        {
#line 64
this.ValidarHistoricoDoRelatorioECAD("\"Mensal\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\" \"", "\"1\"", "\"NOVA MUSICA HELEN\"", "\"BIBLIOTECA MUSICAL\"", "\"TESTA\"", "\"ANITTA\"", "\"10\"", "\"TM\"", "\" \"", "\"HELEN PRODUCOES\"", "\" \"", "\" \"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarRelatorioECADMensalPeloFiltroMidia_(
                    string tipo, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string nomedoEpisodio, 
                    string diretor, 
                    string ordemExecucao, 
                    string titulodaObraMusica, 
                    string tipodeMusica, 
                    string autor, 
                    string interprete, 
                    string segundos, 
                    string classificacao, 
                    string compositores, 
                    string editora, 
                    string gravadora, 
                    string submix, 
                    string nomePlanilha, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT07"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar relatório ECAD mensal pelo filtro mídia.", null, @__tags);
#line 74
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 75
    testRunner.When(string.Format("filtro um relatorio ECAD preenchendo o campo tipo , periodo {0}, {1} , {2} e midi" +
                        "a", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 76
 testRunner.Then(string.Format("gero um relatorio ECAD e verifico as informações {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} estao sendo exibidas " +
                        "corretamente para o filtro {17}, {18} escolhidos", programa, dataExibicao, capitulo, nomedoEpisodio, diretor, ordemExecucao, titulodaObraMusica, tipodeMusica, autor, interprete, segundos, classificacao, compositores, editora, gravadora, submix, nomePlanilha, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório ECAD mensal pelo filtro mídia., \"Mensal\"", new string[] {
                "chrome",
                "RelatorioECADCT07"}, SourceLine=79)]
        public virtual void GerarRelatorioECADMensalPeloFiltroMidia__Mensal()
        {
#line 74
this.GerarRelatorioECADMensalPeloFiltroMidia_("\"Mensal\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\" \"", "\"1\"", "\"NOVA MUSICA HELEN\"", "\"BIBLIOTECA MUSICAL\"", "\"TESTA\"", "\"ANITTA\"", "\"10\"", "\"TM\"", "\" \"", "\"HELEN PRODUCOES\"", "\" \"", "\" \"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarRelatorioECADComplementoPeloFiltroMidia_(
                    string tipo, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string nomedoEpisodio, 
                    string diretor, 
                    string ordemExecucao, 
                    string titulodaObraMusica, 
                    string tipodeMusica, 
                    string autor, 
                    string interprete, 
                    string segundos, 
                    string classificacao, 
                    string compositores, 
                    string editora, 
                    string gravadora, 
                    string submix, 
                    string nomePlanilha, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT08"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar relatório ECAD Complemento pelo filtro mídia.", null, @__tags);
#line 83
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 84
 testRunner.When(string.Format("filtro um relatorio ECAD complemento preenchendo o campo tipo periodo {0}, {1} , " +
                        "{2} e midia", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 85
 testRunner.Then(string.Format("gero um relatorio ECAD e verifico as informações {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} estao sendo exibidas " +
                        "corretamente para o filtro {17}, {18} escolhidos", programa, dataExibicao, capitulo, nomedoEpisodio, diretor, ordemExecucao, titulodaObraMusica, tipodeMusica, autor, interprete, segundos, classificacao, compositores, editora, gravadora, submix, nomePlanilha, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório ECAD Complemento pelo filtro mídia., \"Complemento\"", new string[] {
                "chrome",
                "RelatorioECADCT08"}, SourceLine=88)]
        public virtual void GerarRelatorioECADComplementoPeloFiltroMidia__Complemento()
        {
#line 83
this.GerarRelatorioECADComplementoPeloFiltroMidia_("\"Complemento\"", "\"Outubro\"", "\"2018\"", "\"ANTENA PAULISTA\"", "\"25/10/2018\"", "\"10012010\"", "\"REPRISE\"", "\" \"", "\"1\"", "\"MUSICA DA MARCELLE\"", "\"MUSICA COMERCIAL\"", "\"MARCELLE MENDONCA,MARCELLE MENDONCA,SHAKIRA MEBARAK\"", "\"DANIEL MUSY\"", "\"40\"", "\"TA\"", "\"\"", "\"EMI SONGS,SOM E LUZ,A DESCOBRIR\"", "\"RGE\"", "\"FULL MIX\"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarRelatorioECADMensalPeloFiltroDDA_(
                    string tipo, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string nomedoEpisodio, 
                    string diretor, 
                    string ordemExecucao, 
                    string titulodaObraMusica, 
                    string tipodeMusica, 
                    string autor, 
                    string interprete, 
                    string segundos, 
                    string classificacao, 
                    string compositores, 
                    string editora, 
                    string gravadora, 
                    string submix, 
                    string nomePlanilha, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT09"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar relatório ECAD Mensal pelo filtro DDA.", null, @__tags);
#line 92
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 93
    testRunner.When(string.Format("filtro um relatorio ECAD preenchendo o campo tipo , periodo {0}, {1} , {2} e DDA", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 94
 testRunner.Then(string.Format("gero um relatorio ECAD e verifico as informações {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} estao sendo exibidas " +
                        "corretamente para o filtro {17}, {18} escolhidos", programa, dataExibicao, capitulo, nomedoEpisodio, diretor, ordemExecucao, titulodaObraMusica, tipodeMusica, autor, interprete, segundos, classificacao, compositores, editora, gravadora, submix, nomePlanilha, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório ECAD Mensal pelo filtro DDA., \"Mensal\"", new string[] {
                "chrome",
                "RelatorioECADCT09"}, SourceLine=97)]
        public virtual void GerarRelatorioECADMensalPeloFiltroDDA__Mensal()
        {
#line 92
this.GerarRelatorioECADMensalPeloFiltroDDA_("\"Mensal\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\" \"", "\"1\"", "\"NOVA MUSICA HELEN\"", "\"BIBLIOTECA MUSICAL\"", "\"TESTA\"", "\"ANITTA\"", "\"10\"", "\"TM\"", "\" \"", "\"HELEN PRODUCOES\"", "\" \"", "\" \"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarRelatorioECADComplementoPeloFiltroDDA_(
                    string tipo, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string nomedoEpisodio, 
                    string diretor, 
                    string ordemExecucao, 
                    string titulodaObraMusica, 
                    string tipodeMusica, 
                    string autor, 
                    string interprete, 
                    string segundos, 
                    string classificacao, 
                    string compositores, 
                    string editora, 
                    string gravadora, 
                    string submix, 
                    string nomePlanilha, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT10"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar relatório ECAD Complemento pelo filtro DDA.", null, @__tags);
#line 101
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 102
 testRunner.When(string.Format("filtro um relatorio ECAD complemento preenchendo o campo tipo periodo {0}, {1} , " +
                        "{2} e DDA", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 103
 testRunner.Then(string.Format("gero um relatorio ECAD e verifico as informações {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} estao sendo exibidas " +
                        "corretamente para o filtro {17}, {18} escolhidos", programa, dataExibicao, capitulo, nomedoEpisodio, diretor, ordemExecucao, titulodaObraMusica, tipodeMusica, autor, interprete, segundos, classificacao, compositores, editora, gravadora, submix, nomePlanilha, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório ECAD Complemento pelo filtro DDA., \"Complemento\"", new string[] {
                "chrome",
                "RelatorioECADCT10"}, SourceLine=106)]
        public virtual void GerarRelatorioECADComplementoPeloFiltroDDA__Complemento()
        {
#line 101
this.GerarRelatorioECADComplementoPeloFiltroDDA_("\"Complemento\"", "\"Outubro\"", "\"2018\"", "\"ANTENA PAULISTA\"", "\"25/10/2018\"", "\"10012010\"", "\"REPRISE\"", "\" \"", "\"1\"", "\"MUSICA DA MARCELLE\"", "\"MUSICA COMERCIAL\"", "\"MARCELLE MENDONCA,MARCELLE MENDONCA,SHAKIRA MEBARAK\"", "\"DANIEL MUSY\"", "\"40\"", "\"TA\"", "\"\"", "\"EMI SONGS,SOM E LUZ,A DESCOBRIR\"", "\"RGE\"", "\"FULL MIX\"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarRelatorioECADComCampoSegundosSuperiorAZero_(
                    string tipo, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string nomedoEpisodio, 
                    string diretor, 
                    string ordemExecucao, 
                    string titulodaObraMusica, 
                    string tipodeMusica, 
                    string autor, 
                    string interprete, 
                    string segundos, 
                    string classificacao, 
                    string compositores, 
                    string editora, 
                    string gravadora, 
                    string submix, 
                    string nomePlanilha, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT11"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar relatório ECAD com campo segundos superior a Zero.", null, @__tags);
#line 110
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 111
    testRunner.When(string.Format("filtro um relatorio ECAD preenchendo o campo tipo e o periodo {0}, {1} , {2}", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 112
 testRunner.Then(string.Format("gero um relatorio ECAD e verifico as informações {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} estao sendo exibidas " +
                        "corretamente para o filtro {17}, {18} escolhidos", programa, dataExibicao, capitulo, nomedoEpisodio, diretor, ordemExecucao, titulodaObraMusica, tipodeMusica, autor, interprete, segundos, classificacao, compositores, editora, gravadora, submix, nomePlanilha, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório ECAD com campo segundos superior a Zero., \"Mensal\"", new string[] {
                "chrome",
                "RelatorioECADCT11"}, SourceLine=115)]
        public virtual void GerarRelatorioECADComCampoSegundosSuperiorAZero__Mensal()
        {
#line 110
this.GerarRelatorioECADComCampoSegundosSuperiorAZero_("\"Mensal\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\" \"", "\"1\"", "\"NOVA MUSICA HELEN\"", "\"BIBLIOTECA MUSICAL\"", "\"TESTA\"", "\"ANITTA\"", "\"10\"", "\"TM\"", "\" \"", "\"HELEN PRODUCOES\"", "\" \"", "\" \"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarDuplicidadeDeItensNoRelatorioECAD(
                    string tipo, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string nomedoEpisodio, 
                    string diretor, 
                    string ordemExecucao, 
                    string titulodaObraMusica, 
                    string tipodeMusica, 
                    string autor, 
                    string interprete, 
                    string segundos, 
                    string classificacao, 
                    string compositores, 
                    string editora, 
                    string gravadora, 
                    string submix, 
                    string nomePlanilha, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT12"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar duplicidade de itens no relatório ECAD", null, @__tags);
#line 119
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 120
    testRunner.When(string.Format("filtro um relatorio ECAD preenchendo o campo tipo e o periodo {0}, {1} , {2}", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 121
 testRunner.Then(string.Format("gero um relatorio ECAD e verifico as informações {0}, {1}, {2}, {3}, {4}, {5}, {6" +
                        "}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16} estao sendo exibidas " +
                        "corretamente para o filtro {17}, {18} escolhidos", programa, dataExibicao, capitulo, nomedoEpisodio, diretor, ordemExecucao, titulodaObraMusica, tipodeMusica, autor, interprete, segundos, classificacao, compositores, editora, gravadora, submix, nomePlanilha, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar duplicidade de itens no relatório ECAD, Variant 0", new string[] {
                "chrome",
                "RelatorioECADCT12"}, SourceLine=124)]
        public virtual void ValidarDuplicidadeDeItensNoRelatorioECAD_Variant0()
        {
#line 119
this.ValidarDuplicidadeDeItensNoRelatorioECAD("\"Mensal\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\" \"", "\"1\"", "\"NOVA MUSICA HELEN\"", "\"BIBLIOTECA MUSICAL\"", "\"TESTA\"", "\"ANITTA\"", "\"10\"", "\"TM\"", "\" \"", "\"HELEN PRODUCOES\"", "\" \"", "\" \"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar duplicidade de itens no relatório ECAD, Variant 1", new string[] {
                "chrome",
                "RelatorioECADCT12"}, SourceLine=124)]
        public virtual void ValidarDuplicidadeDeItensNoRelatorioECAD_Variant1()
        {
#line 119
this.ValidarDuplicidadeDeItensNoRelatorioECAD("\"Mensal\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\" \"", "\"1\"", "\"NOVA MUSICA HELEN\"", "\"BIBLIOTECA MUSICAL\"", "\"TESTA\"", "\"ANITTA\"", "\"10\"", "\"TM\"", "\" \"", "\"HELEN PRODUCOES\"", "\" \"", "\" \"", "\"Planilha Mensal ECAD\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void FecharPeriodoMensalComPeriodoFechadoDoRelatorioECAD(string mes, string ano, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT13"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Fechar periodo mensal com periodo fechado do relatorio ECAD", null, @__tags);
#line 129
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 130
    testRunner.When(string.Format("realizo um fechamento mensal do relatório ECAD preenchendo o campo periodo {0}, {" +
                        "1}", mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 131
    testRunner.Then(string.Format("visualizo a mensagem de fechamento em destaque {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Fechar periodo mensal com periodo fechado do relatorio ECAD, \"Outubro\"", new string[] {
                "chrome",
                "RelatorioECADCT13"}, SourceLine=134)]
        public virtual void FecharPeriodoMensalComPeriodoFechadoDoRelatorioECAD_Outubro()
        {
#line 129
this.FecharPeriodoMensalComPeriodoFechadoDoRelatorioECAD("\"Outubro\"", "\"2017\"", "\"Já foi realizado fechamento para este período.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioMensalECADEmPDF(string tipo, string mes, string ano, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT14"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório mensal ECAD em PDF", null, @__tags);
#line 138
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 139
    testRunner.When(string.Format("filtro um relatorio ECAD preenchendo o campo tipo e o periodo {0}, {1} , {2}", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 140
 testRunner.Then("valido a tela apresentando o aquivo em PDF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório mensal ECAD em PDF, Variant 0", new string[] {
                "chrome",
                "RelatorioECADCT14"}, SourceLine=143)]
        public virtual void GerarNovoRelatorioMensalECADEmPDF_Variant0()
        {
#line 138
this.GerarNovoRelatorioMensalECADEmPDF("\"Mensal\"", "\"Outubro\"", "\"2017\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório mensal ECAD em PDF, Variant 1", new string[] {
                "chrome",
                "RelatorioECADCT14"}, SourceLine=143)]
        public virtual void GerarNovoRelatorioMensalECADEmPDF_Variant1()
        {
#line 138
this.GerarNovoRelatorioMensalECADEmPDF("\"Mensal\"", "\"Outubro\"", "\"2017\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioComplementoECADEmPDF(string tipo, string mes, string ano, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioECADCT15"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório Complemento ECAD em PDF", null, @__tags);
#line 148
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
this.FeatureBackground();
#line 149
    testRunner.When(string.Format("filtro um relatorio ECAD preenchendo o campo tipo e o periodo {0}, {1} , {2}", tipo, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 150
 testRunner.Then("valido a tela apresentando o aquivo em PDF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório Complemento ECAD em PDF, Variant 0", new string[] {
                "chrome",
                "RelatorioECADCT15"}, SourceLine=153)]
        public virtual void GerarNovoRelatorioComplementoECADEmPDF_Variant0()
        {
#line 148
this.GerarNovoRelatorioComplementoECADEmPDF("\"Complemento\"", "\"Outubro\"", "\"2017\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório Complemento ECAD em PDF, Variant 1", new string[] {
                "chrome",
                "RelatorioECADCT15"}, SourceLine=153)]
        public virtual void GerarNovoRelatorioComplementoECADEmPDF_Variant1()
        {
#line 148
this.GerarNovoRelatorioComplementoECADEmPDF("\"Complemento\"", "\"Outubro\"", "\"2018\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
