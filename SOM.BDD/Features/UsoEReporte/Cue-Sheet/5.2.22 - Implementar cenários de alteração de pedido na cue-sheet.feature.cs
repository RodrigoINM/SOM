// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.UsoEReporte.Cue_Sheet
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("5.2.22 - Implementar CT de alteração de pedido na cue-sheet", new string[] {
            "kill_Driver",
            "AlteracaoDePedidoPorCueSheet"}, SourceFile="Features\\UsoEReporte\\Cue-Sheet\\5.2.22 - Implementar cenários de alteração de pedi" +
        "do na cue-sheet.feature", SourceLine=5)]
    public partial class _5_2_22_ImplementarCTDeAlteracaoDePedidoNaCue_SheetFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "5.2.22 - Implementar cenários de alteração de pedido na cue-sheet.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "5.2.22 - Implementar CT de alteração de pedido na cue-sheet", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "AlteracaoDePedidoPorCueSheet"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line 9
        testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar cancelamento de item de Pedido após mudança de título na cue-sheet", new string[] {
                "chrome",
                "AlteracaoDePedidoPorCueSheetCT01"}, SourceLine=11)]
        public virtual void ValidarCancelamentoDeItemDePedidoAposMudancaDeTituloNaCue_Sheet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar cancelamento de item de Pedido após mudança de título na cue-sheet", null, new string[] {
                        "chrome",
                        "AlteracaoDePedidoPorCueSheetCT01"});
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 14
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 15
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 16
 testRunner.And("que tenha uma cue-sheet cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 17
 testRunner.And("que tenha um item cadastrado na cue-sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 18
 testRunner.And("que tenha gerado um pedido para o item cadastrado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 19
 testRunner.And("que tenha acessado os detalhes do pedido gerado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 20
 testRunner.When("volto para a tela da Cue-Sheet e altero o titulo da obra do item da Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 21
 testRunner.And("volto para a tela de detalhes do pedido anterior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 22
 testRunner.Then("visualizo que o pedido anterior foi cancelado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar cancelamento de item de Pedido após mudança de Sincronismo Globo na cue-s" +
            "heet", new string[] {
                "chrome",
                "AlteracaoDePedidoPorCueSheetCT02"}, SourceLine=24)]
        public virtual void ValidarCancelamentoDeItemDePedidoAposMudancaDeSincronismoGloboNaCue_Sheet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar cancelamento de item de Pedido após mudança de Sincronismo Globo na cue-s" +
                    "heet", null, new string[] {
                        "chrome",
                        "AlteracaoDePedidoPorCueSheetCT02"});
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 27
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 28
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 29
 testRunner.And("que tenha uma cue-sheet cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 30
 testRunner.And("que tenha um item cadastrado na cue-sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 31
 testRunner.And("que tenha gerado um pedido para o item cadastrado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 32
 testRunner.And("que tenha acessado os detalhes do pedido gerado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 33
 testRunner.When("volto para a tela da Cue-Sheet e altero o sincronismo do item da Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 34
 testRunner.And("volto para a tela de detalhes do pedido anterior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 35
 testRunner.Then("visualizo que o pedido anterior foi cancelado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar cancelamento de item de Pedido após mudança de Reprise na cue-sheet", new string[] {
                "chrome",
                "AlteracaoDePedidoPorCueSheetCT03"}, SourceLine=37)]
        public virtual void ValidarCancelamentoDeItemDePedidoAposMudancaDeRepriseNaCue_Sheet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar cancelamento de item de Pedido após mudança de Reprise na cue-sheet", null, new string[] {
                        "chrome",
                        "AlteracaoDePedidoPorCueSheetCT03"});
#line 38
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 40
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 41
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 42
 testRunner.And("que tenha uma cue-sheet cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 43
 testRunner.And("que tenha um item cadastrado na cue-sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 44
 testRunner.And("que tenha gerado um pedido para o item cadastrado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 45
 testRunner.And("que tenha acessado os detalhes do pedido gerado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 46
 testRunner.When("volto para a tela da Cue-Sheet e altero o item da Cue-Sheet para Reprise", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 47
 testRunner.And("volto para a tela de detalhes do pedido anterior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 48
 testRunner.Then("visualizo que o pedido anterior foi cancelado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar cancelamento de item de Pedido após mudança de Fair Use na cue-sheet", new string[] {
                "chrome",
                "AlteracaoDePedidoPorCueSheetCT04"}, SourceLine=50)]
        public virtual void ValidarCancelamentoDeItemDePedidoAposMudancaDeFairUseNaCue_Sheet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar cancelamento de item de Pedido após mudança de Fair Use na cue-sheet", null, new string[] {
                        "chrome",
                        "AlteracaoDePedidoPorCueSheetCT04"});
#line 51
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 53
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 54
 testRunner.And("que tenha um produto do tipo Jornalismo cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 55
 testRunner.And("que tenha uma cue-sheet cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 56
 testRunner.And("que tenha um item cadastrado na cue-sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 57
 testRunner.And("que tenha gerado um pedido para o item cadastrado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 58
 testRunner.And("que tenha acessado os detalhes do pedido gerado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 59
 testRunner.When("volto para a tela da Cue-Sheet e altero o item da Cue-Sheet para Fair Use", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 60
 testRunner.And("volto para a tela de detalhes do pedido anterior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 61
 testRunner.Then("visualizo que o pedido anterior foi cancelado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Exclusão do item de cue-sheet", new string[] {
                "chrome",
                "AlteracaoDePedidoPorCueSheetCT05"}, SourceLine=63)]
        public virtual void ExclusaoDoItemDeCue_Sheet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Exclusão do item de cue-sheet", null, new string[] {
                        "chrome",
                        "AlteracaoDePedidoPorCueSheetCT05"});
#line 64
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 65
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 66
 testRunner.And("que tenha um produto do tipo Jornalismo cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 67
 testRunner.And("que tenha uma cue-sheet cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 68
 testRunner.And("que tenha um item cadastrado na cue-sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 69
 testRunner.And("que tenha gerado um pedido para o item cadastrado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 70
 testRunner.And("que tenha acessado os detalhes do pedido gerado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 71
 testRunner.When("volto para a tela da Cue-Sheet e excluo o item da Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 72
 testRunner.And("volto para a tela de detalhes do pedido anterior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 73
 testRunner.Then("visualizo que o pedido anterior foi cancelado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Excluir, aprovar e Gerar pedido com sucesso", new string[] {
                "chrome",
                "AlteracaoDePedidoPorCueSheetCT06"}, SourceLine=75)]
        public virtual void ExcluirAprovarEGerarPedidoComSucesso()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Excluir, aprovar e Gerar pedido com sucesso", null, new string[] {
                        "chrome",
                        "AlteracaoDePedidoPorCueSheetCT06"});
#line 76
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 78
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 79
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 80
 testRunner.And("que tenha uma cue-sheet cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 81
 testRunner.And("que tenha um item cadastrado na cue-sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 82
 testRunner.And("que tenha gerado um pedido para o item cadastrado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 83
 testRunner.And("que tenha acessado os detalhes do pedido gerado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 84
 testRunner.When("volto para a tela da Cue-Sheet e excluo o item da Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 85
 testRunner.And("cadastro um novo item na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 86
 testRunner.And("gero um novo pedido para o item de Cue-Sheet cadastrado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 87
 testRunner.And("volto para a tela de detalhes do pedido anterior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 88
 testRunner.Then("visualizo que o pedido anterior foi cancelado com sucesso", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar que pedido com status concluido não é cancelado ao excluir item da Cue-Sh" +
            "eet", new string[] {
                "chrome",
                "AlteracaoDePedidoPorCueSheetCT07"}, SourceLine=90)]
        public virtual void ValidarQuePedidoComStatusConcluidoNaoECanceladoAoExcluirItemDaCue_Sheet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar que pedido com status concluido não é cancelado ao excluir item da Cue-Sh" +
                    "eet", null, new string[] {
                        "chrome",
                        "AlteracaoDePedidoPorCueSheetCT07"});
#line 91
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 93
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 94
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 95
 testRunner.And("que tenha uma cue-sheet cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 96
 testRunner.And("que tenha um item cadastrado na cue-sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 97
 testRunner.And("que tenha gerado um pedido para o item cadastrado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 98
 testRunner.And("que tenha um item da Cue-Sheet com pedido enviado para pagamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 99
 testRunner.When("volto para a tela da Cue-Sheet e excluo o item da Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 100
 testRunner.And("cadastro um novo item na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 101
 testRunner.And("gero um novo pedido para o item de Cue-Sheet cadastrado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 102
 testRunner.And("volto para a tela de detalhes do pedido anterior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 103
 testRunner.Then("visualizo que o pedido anterior não foi cancelado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar que pedido com status concluido não é cancelado após mudança de Sincronis" +
            "mo Globo na cue-sheet", new string[] {
                "chrome",
                "AlteracaoDePedidoPorCueSheetCT08"}, SourceLine=105)]
        public virtual void ValidarQuePedidoComStatusConcluidoNaoECanceladoAposMudancaDeSincronismoGloboNaCue_Sheet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar que pedido com status concluido não é cancelado após mudança de Sincronis" +
                    "mo Globo na cue-sheet", null, new string[] {
                        "chrome",
                        "AlteracaoDePedidoPorCueSheetCT08"});
#line 106
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 108
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 109
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 110
 testRunner.And("que tenha uma cue-sheet cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 111
 testRunner.And("que tenha um item cadastrado na cue-sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 112
 testRunner.And("que tenha gerado um pedido para o item cadastrado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 113
 testRunner.And("que tenha um item da Cue-Sheet com pedido enviado para pagamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 114
 testRunner.When("volto para a tela da Cue-Sheet e altero o sincronismo do item da Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 115
 testRunner.And("volto para a tela de detalhes do pedido anterior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 116
 testRunner.Then("visualizo que o pedido anterior não foi cancelado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar que pedido com status concluido não é cancelado após mudança de Reprise n" +
            "a cue-sheet", new string[] {
                "chrome",
                "AlteracaoDePedidoPorCueSheetCT09"}, SourceLine=118)]
        public virtual void ValidarQuePedidoComStatusConcluidoNaoECanceladoAposMudancaDeRepriseNaCue_Sheet()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar que pedido com status concluido não é cancelado após mudança de Reprise n" +
                    "a cue-sheet", null, new string[] {
                        "chrome",
                        "AlteracaoDePedidoPorCueSheetCT09"});
#line 119
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 121
 testRunner.Given("que tenha uma obra cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 122
 testRunner.And("que tenha um produto cadastrado no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 123
 testRunner.And("que tenha uma cue-sheet cadastrada no sistema", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 124
 testRunner.And("que tenha um item cadastrado na cue-sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 125
 testRunner.And("que tenha gerado um pedido para o item cadastrado na Cue-Sheet", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 126
 testRunner.And("que tenha um item da Cue-Sheet com pedido enviado para pagamento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 127
 testRunner.When("volto para a tela da Cue-Sheet e altero o item da Cue-Sheet para Reprise", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 128
 testRunner.And("volto para a tela de detalhes do pedido anterior", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 129
 testRunner.Then("visualizo que o pedido anterior não foi cancelado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
