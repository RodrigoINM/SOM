// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.UsoEReporte.Cue_Sheet
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("5.2.9 - Alterar item na cue-sheet", new string[] {
            "kill_Driver",
            "AlterarCueSheet"}, SourceFile="Features\\UsoEReporte\\Cue-Sheet\\5.2.9 - Alterar item cue-sheet.feature", SourceLine=5)]
    public partial class _5_2_9_AlterarItemNaCue_SheetFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "5.2.9 - Alterar item cue-sheet.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt"), "5.2.9 - Alterar item na cue-sheet", null, ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "AlterarCueSheet"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line 9
    testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line hidden
        }
        
        public virtual void AlterarTituloDoFonogramaComSucesso(
                    string produto, 
                    string episodio, 
                    string capitulo, 
                    string midia, 
                    string dia, 
                    string mes, 
                    string ano, 
                    string repriseRebatida, 
                    string obra, 
                    string utilizacao, 
                    string sincronismo, 
                    string tempo, 
                    string interprete, 
                    string obra2, 
                    string mensagem, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "AlterarCueSheetCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alterar Título do fonograma com sucesso", null, @__tags);
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 13
 testRunner.Given(string.Format("que tenha uma Cue-Sheet cadastrada no sistema {0}, {1}, {2}, {3}, {4}, {5}, {6}, " +
                        "{7}", produto, episodio, capitulo, midia, dia, mes, ano, repriseRebatida), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 14
 testRunner.And(string.Format("que tenha um item cadastrado na Cue-Sheet {0}, {1}, {2}, {3}, {4}", obra, utilizacao, sincronismo, tempo, interprete), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 15
 testRunner.When(string.Format("alterar o Titulo do item cadastrado na Cue-Sheet {0}, {1}", obra, obra2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 16
 testRunner.Then(string.Format("visualizo uma mensagem de item alterado com sucesso {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar Título do fonograma com sucesso, \"Aleatório\"", new string[] {
                "chrome",
                "AlterarCueSheetCT01"}, SourceLine=19)]
        public virtual void AlterarTituloDoFonogramaComSucesso_Aleatorio()
        {
#line 12
this.AlterarTituloDoFonogramaComSucesso("\"Aleatório\"", "\"Aleatório\"", "\"01\"", "\"GLOBONEWS\"", "\"12\"", "\"12\"", "\"2018\"", "\"Não\"", "\"Aleatório\"", "\"BK – BACKGROUND\"", "\"ABERTURA\"", "\"16\"", "\" \"", "\"TESTE INMETRICS\"", "\"Item alterado com sucesso\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void AlterarOsDemaisCamposComSucesso(
                    string produto, 
                    string episodio, 
                    string capitulo, 
                    string midia, 
                    string dia, 
                    string mes, 
                    string ano, 
                    string repriseRebatida, 
                    string obra, 
                    string utilizacao, 
                    string sincronismo, 
                    string tempo, 
                    string interprete, 
                    string obra2, 
                    string mensagem, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "AlterarCueSheetCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Alterar os demais campos com sucesso", null, @__tags);
#line 23
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 24
 testRunner.Given(string.Format("que tenha uma Cue-Sheet cadastrada no sistema {0}, {1}, {2}, {3}, {4}, {5}, {6}, " +
                        "{7}", produto, episodio, capitulo, midia, dia, mes, ano, repriseRebatida), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 25
 testRunner.And(string.Format("que tenha um item cadastrado na Cue-Sheet {0}, {1}, {2}, {3}, {4}", obra, utilizacao, sincronismo, tempo, interprete), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 26
 testRunner.When(string.Format("alterar dados do item cadastrado na Cue-Sheet {0}, {1}, {2}, {3}, {4}, {5}", obra, obra2, utilizacao, sincronismo, tempo, interprete), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 27
 testRunner.Then(string.Format("visualizo uma mensagem de item alterado com sucesso {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Alterar os demais campos com sucesso, \"Aleatório\"", new string[] {
                "chrome",
                "AlterarCueSheetCT02"}, SourceLine=30)]
        public virtual void AlterarOsDemaisCamposComSucesso_Aleatorio()
        {
#line 23
this.AlterarOsDemaisCamposComSucesso("\"Aleatório\"", "\"Aleatório\"", "\"01\"", "\"GLOBONEWS\"", "\"12\"", "\"12\"", "\"2018\"", "\"Não\"", "\"Aleatório\"", "\"BK – BACKGROUND\"", "\"ABERTURA\"", "\"16\"", "\" \"", "\"TESTE INMETRICS\"", "\"Item alterado com sucesso\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void IncluirUmInterpretePelaCue_SheetComSucesso(
                    string produto, 
                    string episodio, 
                    string capitulo, 
                    string midia, 
                    string dia, 
                    string mes, 
                    string ano, 
                    string repriseRebatida, 
                    string obra, 
                    string utilizacao, 
                    string sincronismo, 
                    string tempo, 
                    string interprete, 
                    string obra2, 
                    string mensagem, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "AlterarCueSheetCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Incluir um interprete pela cue-sheet com sucesso", null, @__tags);
#line 34
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 35
 testRunner.Given(string.Format("que tenha uma Cue-Sheet cadastrada no sistema {0}, {1}, {2}, {3}, {4}, {5}, {6}, " +
                        "{7}", produto, episodio, capitulo, midia, dia, mes, ano, repriseRebatida), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 36
 testRunner.And(string.Format("que tenha um item cadastrado na Cue-Sheet {0}, {1}, {2}, {3}, {4}", obra, utilizacao, sincronismo, tempo, interprete), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 37
 testRunner.When(string.Format("alterar o Interprete do item cadastrado na Cue-Sheet cadastrando um novo {0}", obra), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 38
 testRunner.Then(string.Format("visualizo uma mensagem de item alterado com sucesso {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Incluir um interprete pela cue-sheet com sucesso, \"Aleatório\"", new string[] {
                "chrome",
                "AlterarCueSheetCT03"}, SourceLine=41)]
        public virtual void IncluirUmInterpretePelaCue_SheetComSucesso_Aleatorio()
        {
#line 34
this.IncluirUmInterpretePelaCue_SheetComSucesso("\"Aleatório\"", "\"Aleatório\"", "\"01\"", "\"GLOBONEWS\"", "\"12\"", "\"12\"", "\"2018\"", "\"Não\"", "\"Aleatório\"", "\"BK – BACKGROUND\"", "\"ABERTURA\"", "\"16\"", "\" \"", "\"TESTE INMETRICS\"", "\"Item alterado com sucesso\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarQueNaoEPossivelAlterarItemComStatusAprovado(
                    string produto, 
                    string episodio, 
                    string capitulo, 
                    string midia, 
                    string dia, 
                    string mes, 
                    string ano, 
                    string repriseRebatida, 
                    string obra, 
                    string utilizacao, 
                    string sincronismo, 
                    string tempo, 
                    string interprete, 
                    string obra2, 
                    string mensagem, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "AlterarCueSheetCT04"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar que não é possível alterar item com status Aprovado", null, @__tags);
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
this.FeatureBackground();
#line 46
 testRunner.Given(string.Format("que tenha uma Cue-Sheet cadastrada no sistema {0}, {1}, {2}, {3}, {4}, {5}, {6}, " +
                        "{7}", produto, episodio, capitulo, midia, dia, mes, ano, repriseRebatida), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 47
 testRunner.And(string.Format("que tenha um item cadastrado na Cue-Sheet {0}, {1}, {2}, {3}, {4}", obra, utilizacao, sincronismo, tempo, interprete), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 48
 testRunner.When(string.Format("aprovo um item da Cue-Sheet {0}", obra), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 49
 testRunner.Then(string.Format("não consigo mais editar o item aprovado da Cue-Sheet {0}", obra), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar que não é possível alterar item com status Aprovado, \"Aleatório\"", new string[] {
                "chrome",
                "AlterarCueSheetCT04"}, SourceLine=52)]
        public virtual void ValidarQueNaoEPossivelAlterarItemComStatusAprovado_Aleatorio()
        {
#line 45
this.ValidarQueNaoEPossivelAlterarItemComStatusAprovado("\"Aleatório\"", "\"Aleatório\"", "\"01\"", "\"GLOBONEWS\"", "\"12\"", "\"12\"", "\"2018\"", "\"Não\"", "\"Aleatório\"", "\"BK – BACKGROUND\"", "\"ABERTURA\"", "\"16\"", "\" \"", "\"TESTE INMETRICS\"", "\"Item alterado com sucesso\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
