// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SOM.BDD.Features.UsoEReporte.RelatorioUBEM
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [TechTalk.SpecRun.FeatureAttribute("5.6.1 - Gerar Relatório UBEM", new string[] {
            "kill_Driver",
            "RelatorioUBEM"}, Description=@"	Como um usuário com permissão ""Gerar Relatório UBEM""
	Eu quero emitir um relatório em formato Excel conforme padrão
	De modo que reportar as utilizações de músicas nas produções da Globo à UBEM.

Critérios de aceite:
Sistema deverá ser capaz de reportar as utilizações de músicas nas produções da Globo à UBEM.", SourceFile="Features\\UsoEReporte\\RelatorioUBEM\\5.6.1 - Gerar Relatório UBEM.feature", SourceLine=6)]
    public partial class _5_6_1_GerarRelatorioUBEMFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "5.6.1 - Gerar Relatório UBEM.feature"
#line hidden
        
        [TechTalk.SpecRun.FeatureInitialize()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("pt-BR"), "5.6.1 - Gerar Relatório UBEM", @"	Como um usuário com permissão ""Gerar Relatório UBEM""
	Eu quero emitir um relatório em formato Excel conforme padrão
	De modo que reportar as utilizações de músicas nas produções da Globo à UBEM.

Critérios de aceite:
Sistema deverá ser capaz de reportar as utilizações de músicas nas produções da Globo à UBEM.", ProgrammingLanguage.CSharp, new string[] {
                        "kill_Driver",
                        "RelatorioUBEM"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [TechTalk.SpecRun.FeatureCleanup()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        [TechTalk.SpecRun.ScenarioCleanup()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 15
#line 16
 testRunner.Given("que esteja logado no sistema SOM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Dado ");
#line 17
 testRunner.And("que esteja na tela de Relatorio Ubem", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 18
 testRunner.And("que possua um periodo que tenha sido fechado", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
        }
        
        public virtual void GerarDownloadSemFechamentoMensalRelatorioUBEM(string mes, string ano, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT01"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar download sem fechamento mensal relatório UBEM", null, @__tags);
#line 21
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 22
  testRunner.When(string.Format("faco um filtro para um periodo {0} {1} que ainda nao possua fechamento", mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 23
  testRunner.Then(string.Format("visualizo a mensagem de que não existe fechamento UBEM para o periodo selecionado" +
                        " {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar download sem fechamento mensal relatório UBEM, \"Dezembro\"", new string[] {
                "chrome",
                "RelatorioUBEMCT01"}, SourceLine=26)]
        public virtual void GerarDownloadSemFechamentoMensalRelatorioUBEM_Dezembro()
        {
#line 21
this.GerarDownloadSemFechamentoMensalRelatorioUBEM("\"Dezembro\"", "\"2018\"", "\"Não existe fechamento para o período selecionado.\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar download sem fechamento mensal relatório UBEM, \"Outubro\"", new string[] {
                "chrome",
                "RelatorioUBEMCT01"}, SourceLine=26)]
        public virtual void GerarDownloadSemFechamentoMensalRelatorioUBEM_Outubro()
        {
#line 21
this.GerarDownloadSemFechamentoMensalRelatorioUBEM("\"Outubro\"", "\"2018\"", "\"Não existe fechamento para o período selecionado.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ConsultarRelatorioDeFechamentoUBEM(string associacao, string mes, string ano, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT02"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Consultar relatório de fechamento UBEM", null, @__tags);
#line 31
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 32
  testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 33
  testRunner.Then(string.Format("visualizo o link de download do relatorio de fechamento UBEM com sucesso {0} {1} " +
                        "{2}", associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Consultar relatório de fechamento UBEM, Variant 0", new string[] {
                "chrome",
                "RelatorioUBEMCT02"}, SourceLine=36)]
        public virtual void ConsultarRelatorioDeFechamentoUBEM_Variant0()
        {
#line 31
this.ConsultarRelatorioDeFechamentoUBEM("\"UBEM\"", "\"Outubro\"", "\"2017\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Consultar relatório de fechamento UBEM, Variant 1", new string[] {
                "chrome",
                "RelatorioUBEMCT02"}, SourceLine=36)]
        public virtual void ConsultarRelatorioDeFechamentoUBEM_Variant1()
        {
#line 31
this.ConsultarRelatorioDeFechamentoUBEM("\"UBEM\"", "\"Novembro\"", "\"2017\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarDownloadRelatorioUBEM(string associacao, string mes, string ano, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT03"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar download relatório UBEM", null, @__tags);
#line 41
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 42
  testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 43
  testRunner.Then(string.Format("realizo o download do relatorio UBEM com sucesso para a {0} {1} {2} escolhidos", associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar download relatório UBEM, \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT03"}, SourceLine=46)]
        public virtual void GerarDownloadRelatorioUBEM_UBEM()
        {
#line 41
this.GerarDownloadRelatorioUBEM("\"UBEM\"", "\"Outubro\"", "\"2017\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar download relatório UBEM, \"SEM ASSOCIAÇÃO\"", new string[] {
                "chrome",
                "RelatorioUBEMCT03"}, SourceLine=46)]
        public virtual void GerarDownloadRelatorioUBEM_SEMASSOCIACAO()
        {
#line 41
this.GerarDownloadRelatorioUBEM("\"SEM ASSOCIAÇÃO\"", "\"Outubro\"", "\"2017\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar download relatório UBEM, \"TODAS\"", new string[] {
                "chrome",
                "RelatorioUBEMCT03"}, SourceLine=46)]
        public virtual void GerarDownloadRelatorioUBEM_TODAS()
        {
#line 41
this.GerarDownloadRelatorioUBEM("\"TODAS\"", "\"Outubro\"", "\"2017\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarAsInformacoesDoRelatorioUBEM(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT04"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar as informações do relatório UBEM", null, @__tags);
#line 52
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 53
  testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 54
  testRunner.Then(string.Format("posso baixar o relatorio UBEM e verificar se as informacoes de {0}, {1}, {2}, {3}" +
                        ", {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13} estao sendo exibidas corr" +
                        "etamente para a {14}, {15}, {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar as informações do relatório UBEM, Variant 0", new string[] {
                "chrome",
                "RelatorioUBEMCT04"}, SourceLine=57)]
        public virtual void ValidarAsInformacoesDoRelatorioUBEM_Variant0()
        {
#line 52
this.ValidarAsInformacoesDoRelatorioUBEM("\"UBEM\"", "\"Outubro\"", "\"2017\"", "\"JORNAL NACIONAL\"", "\"09/10/2017\"", "\" \"", "\" \"", "\"JORNALISMO\"", "\"NM SYNTH 2\"", "\"NM SYNTH 2\"", "\"SACHA AMBACK\"", "\"SIGEM\"", "\" \"", "\" \"", "\"SACHA AMBACK\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar as informações do relatório UBEM, Variant 1", new string[] {
                "chrome",
                "RelatorioUBEMCT04"}, SourceLine=57)]
        public virtual void ValidarAsInformacoesDoRelatorioUBEM_Variant1()
        {
#line 52
this.ValidarAsInformacoesDoRelatorioUBEM("\"UBEM\"", "\"Outubro\"", "\"2017\"", "\"NOVO MUNDO\"", "\"02/11/2017\"", "\"700\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"CARIOCA PALACE THEME 2\"", "\" \"", "\"RAFAEL LANGONI SMITH\"", "\"SIGEM\"", "\" \"", "\" \"", "\"PEDRO EUGENIO ARAUJO,RAFAEL LANGONI SMITH,ROGERIO VAZ\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarRelatorioUBEMSemFechamentoMensal(string associacao, string mes, string ano, string mensagem, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT05"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar relatório UBEM sem fechamento mensal", null, @__tags);
#line 62
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 63
    testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 64
    testRunner.Then(string.Format("visualizo a mensagem de que não existe fechamento UBEM para o periodo selecionado" +
                        " {0}", mensagem), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório UBEM sem fechamento mensal, \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT05"}, SourceLine=67)]
        public virtual void GerarRelatorioUBEMSemFechamentoMensal_UBEM()
        {
#line 62
 this.GerarRelatorioUBEMSemFechamentoMensal("\"UBEM\"", "\"Dezembro\"", "\"2018\"", "\"Não existe fechamento para o período selecionado.\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarRelatorioUBEMDoTipoAssociacaoTodasSemFechamentoMensal(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT06"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar relatório UBEM do tipo Associação todas sem fechamento mensal", null, @__tags);
#line 71
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 72
    testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 73
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório UBEM do tipo Associação todas sem fechamento mensal, Variant 0", new string[] {
                "chrome",
                "RelatorioUBEMCT06"}, SourceLine=76)]
        public virtual void GerarRelatorioUBEMDoTipoAssociacaoTodasSemFechamentoMensal_Variant0()
        {
#line 71
this.GerarRelatorioUBEMDoTipoAssociacaoTodasSemFechamentoMensal("\"TODAS\"", "\"Novembro\"", "\"2017\"", "\"NOVO MUNDO\"", "\"02/11/2017\"", "\"700\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"CARIOCA PALACE THEME 2\"", "\" \"", "\"RAFAEL LANGONI SMITH\"", "\"DECK\"", "\"NÃO\"", "\"FUNDO\"", "\"PEDRO EUGENIO ARAUJO,RAFAEL LANGONI SMITH,ROGERIO VAZ\"", "\"NÃO\"", "\"Planilha Mensal TODAS\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório UBEM do tipo Associação todas sem fechamento mensal, Variant 1", new string[] {
                "chrome",
                "RelatorioUBEMCT06"}, SourceLine=76)]
        public virtual void GerarRelatorioUBEMDoTipoAssociacaoTodasSemFechamentoMensal_Variant1()
        {
#line 71
this.GerarRelatorioUBEMDoTipoAssociacaoTodasSemFechamentoMensal("\"TODAS\"", "\"Dezembro\"", "\"2018\"", "\"TESTE DRAMATURGIA TESTE\"", "\"01/12/2018\"", "\"10\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"TESTE 1\"", "\" \"", "\"CVCHAGAS222,CVCHAGAS222,VICTOR,VICTOR\"", "\"SOM E LUZ,WARNER CHAPPELL,SOM E LUZ,SONY MUSIC PUBLISHING\"", "\"NÃO\"", "\"AO VIVO PERFORMANCE\"", "\"ALYNE\"", "\"NÃO\"", "\"Planilha Mensal TODAS\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarRelatorioUBEMDoTipoSemAssociacaoSemFechamentoMensal(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT07"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar relatório UBEM do tipo Sem Associação sem fechamento mensal", null, @__tags);
#line 81
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 82
    testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 83
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório UBEM do tipo Sem Associação sem fechamento mensal, Variant 0", new string[] {
                "chrome",
                "RelatorioUBEMCT07"}, SourceLine=86)]
        public virtual void GerarRelatorioUBEMDoTipoSemAssociacaoSemFechamentoMensal_Variant0()
        {
#line 81
this.GerarRelatorioUBEMDoTipoSemAssociacaoSemFechamentoMensal("\"SEM ASSOCIAÇÃO\"", "\"Novembro\"", "\"2017\"", "\"TESTE VARIEDADES\"", "\"05/11/2017\"", "\"1\"", "\" \"", "\"VARIEDADE SEMANAL\"", "\"MUSICA DE TESTE 5 INT\"", "\" \"", "\"LUCCA\"", "\"UNIVERSAL MGB\"", "\"NÃO\"", "\"ADORNO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal \"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar relatório UBEM do tipo Sem Associação sem fechamento mensal, Variant 1", new string[] {
                "chrome",
                "RelatorioUBEMCT07"}, SourceLine=86)]
        public virtual void GerarRelatorioUBEMDoTipoSemAssociacaoSemFechamentoMensal_Variant1()
        {
#line 81
this.GerarRelatorioUBEMDoTipoSemAssociacaoSemFechamentoMensal("\"SEM ASSOCIAÇÃO\"", "\"Novembro\"", "\"2018\"", "\"TESTE ESPORTE OU JORNALISMO\"", "\"05/11/2018\"", "\"1\"", "\"TESTE\"", "\"JORNALISMO\"", "\"MUSICA DA MARCELLE\"", "\" \"", "\"MARCELLE MENDONCA\"", "\"EMI SONGS\"", "\"NÃO\"", "\"ABERTURA\"", "\"DANIEL MUSY\"", "\"NÃO\"", "\"Planilha Mensal \"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioUBEMMensalTipoUBEM(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT08"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório UBEM Mensal tipo UBEM", null, @__tags);
#line 91
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 92
    testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 93
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório UBEM Mensal tipo UBEM, \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT08"}, SourceLine=96)]
        public virtual void GerarNovoRelatorioUBEMMensalTipoUBEM_UBEM()
        {
#line 91
this.GerarNovoRelatorioUBEMMensalTipoUBEM("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioUBEMMensalTipoSemAssociacao(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT09"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório UBEM Mensal tipo Sem Associação", null, @__tags);
#line 100
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 101
    testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 102
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório UBEM Mensal tipo Sem Associação, \"SEM ASSOCIAÇÃO\"", new string[] {
                "chrome",
                "RelatorioUBEMCT09"}, SourceLine=105)]
        public virtual void GerarNovoRelatorioUBEMMensalTipoSemAssociacao_SEMASSOCIACAO()
        {
#line 100
this.GerarNovoRelatorioUBEMMensalTipoSemAssociacao("\"SEM ASSOCIAÇÃO\"", "\"Novembro\"", "\"2018\"", "\"O CLONE\"", "\"08/11/2018\"", "\"44\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"MUSICA DA MARCELLE\"", "\" \"", "\"MARCELLE MENDONCA\"", "\"EMI SONGS\"", "\"NÃO\"", "\"FUNDO\"", "\"INACIO\"", "\"NÃO\"", "\"Planilha Mensal \"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioUBEMMensalTipoTodos(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT10"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório UBEM Mensal tipo Todos", null, @__tags);
#line 109
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 110
    testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 111
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório UBEM Mensal tipo Todos, \"TODAS\"", new string[] {
                "chrome",
                "RelatorioUBEMCT10"}, SourceLine=114)]
        public virtual void GerarNovoRelatorioUBEMMensalTipoTodos_TODAS()
        {
#line 109
this.GerarNovoRelatorioUBEMMensalTipoTodos("\"TODAS\"", "\"Janeiro\"", "\"2019\"", "\"AUTO_PROD_0\"", "\"01/01/2019\"", "\" \"", "\" \"", "\"JORNALISMO\"", "\"TESTE DE CONHECIMENTO\"", "\" \"", "\"CLAUDEMIR,DINEY,ROSANA SILVA\"", "\"UNIVERSAL MGB,A DESCO,A DESCO\"", "\"NÃO\"", "\"ENCERRAMENTO\"", "\"ANA\"", "\"NÃO\"", "\"Planilha Mensal TODAS\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioUBEMComplementoUBEM(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT11"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório UBEM Complemento UBEM", null, @__tags);
#line 118
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 119
    testRunner.When(string.Format("faco um filtro complemento para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 120
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório UBEM Complemento UBEM, \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT11"}, SourceLine=123)]
        public virtual void GerarNovoRelatorioUBEMComplementoUBEM_UBEM()
        {
#line 118
this.GerarNovoRelatorioUBEMComplementoUBEM("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioUBEMComplementoTipoSemAssociacao(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT12"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório UBEM Complemento tipo Sem Associação", null, @__tags);
#line 127
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 128
    testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 129
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório UBEM Complemento tipo Sem Associação, \"SEM ASSOCIAÇÃO\"", new string[] {
                "chrome",
                "RelatorioUBEMCT12"}, SourceLine=132)]
        public virtual void GerarNovoRelatorioUBEMComplementoTipoSemAssociacao_SEMASSOCIACAO()
        {
#line 127
this.GerarNovoRelatorioUBEMComplementoTipoSemAssociacao("\"SEM ASSOCIAÇÃO\"", "\"Novembro\"", "\"2018\"", "\"O CLONE\"", "\"08/11/2018\"", "\"44\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"MUSICA DA MARCELLE\"", "\" \"", "\"MARCELLE MENDONCA\"", "\"EMI SONGS\"", "\"NÃO\"", "\"FUNDO\"", "\"INACIO\"", "\"NÃO\"", "\"Planilha Mensal \"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioUBEMComplementoTipoTodos(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT13"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório UBEM Complemento tipo Todos", null, @__tags);
#line 136
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 137
    testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 138
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório UBEM Complemento tipo Todos, \"TODAS\"", new string[] {
                "chrome",
                "RelatorioUBEMCT13"}, SourceLine=141)]
        public virtual void GerarNovoRelatorioUBEMComplementoTipoTodos_TODAS()
        {
#line 136
this.GerarNovoRelatorioUBEMComplementoTipoTodos("\"TODAS\"", "\"Janeiro\"", "\"2019\"", "\"AUTO_PROD_0\"", "\"01/01/2019\"", "\" \"", "\" \"", "\"JORNALISMO\"", "\"TESTE DE CONHECIMENTO\"", "\" \"", "\"CLAUDEMIR,DINEY,ROSANA SILVA\"", "\"UNIVERSAL MGB,A DESCO,A DESCO\"", "\"NÃO\"", "\"ENCERRAMENTO\"", "\"ANA\"", "\"NÃO\"", "\"Planilha Mensal TODAS\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioUBEMMensalComDDAEmBranco_(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT14"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório UBEM mensal com DDA em branco.", null, @__tags);
#line 145
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 146
    testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 147
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório UBEM mensal com DDA em branco., \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT14"}, SourceLine=150)]
        public virtual void GerarNovoRelatorioUBEMMensalComDDAEmBranco__UBEM()
        {
#line 145
this.GerarNovoRelatorioUBEMMensalComDDAEmBranco_("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioUBEMMensalComDDAAssociado_(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT15"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório UBEM mensal com DDA associado.", null, @__tags);
#line 154
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 155
    testRunner.When(string.Format("faco um filtro para um periodo {0} {1} associacao {2} e DDA", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 156
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório UBEM mensal com DDA associado., \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT15"}, SourceLine=159)]
        public virtual void GerarNovoRelatorioUBEMMensalComDDAAssociado__UBEM()
        {
#line 154
this.GerarNovoRelatorioUBEMMensalComDDAAssociado_("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioUBEMComplementoComDDAAssociado_(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT16"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório UBEM Complemento com DDA associado.", null, @__tags);
#line 163
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 164
 testRunner.When(string.Format("faco um filtro complemento para um periodo {0} {1} associacao {2} e DDA", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 165
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório UBEM Complemento com DDA associado., \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT16"}, SourceLine=168)]
        public virtual void GerarNovoRelatorioUBEMComplementoComDDAAssociado__UBEM()
        {
#line 163
this.GerarNovoRelatorioUBEMComplementoComDDAAssociado_("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioUBEMSemAssociacaoMensalComDDA(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT17"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório UBEM sem associação mensal com DDA", null, @__tags);
#line 172
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 173
    testRunner.When(string.Format("faco um filtro para um periodo sem associação {0} {1} associacao {2} e DDA", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 174
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório UBEM sem associação mensal com DDA, \"SEM ASSOCIAÇÃO\"", new string[] {
                "chrome",
                "RelatorioUBEMCT17"}, SourceLine=177)]
        public virtual void GerarNovoRelatorioUBEMSemAssociacaoMensalComDDA_SEMASSOCIACAO()
        {
#line 172
this.GerarNovoRelatorioUBEMSemAssociacaoMensalComDDA("\"SEM ASSOCIAÇÃO\"", "\"Novembro\"", "\"2018\"", "\"O CLONE\"", "\"08/11/2018\"", "\"44\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"MUSICA DA MARCELLE\"", "\" \"", "\"MARCELLE MENDONCA\"", "\"EMI SONGS\"", "\"NÃO\"", "\"FUNDO\"", "\"INACIO\"", "\"NÃO\"", "\"Planilha Mensal \"", ((string[])(null)));
#line hidden
        }
        
        public virtual void GerarNovoRelatorioUBEMSemInformarOPeriodo_(string mes, string ano, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT18"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Gerar Novo relatório UBEM sem informar o periodo.", null, @__tags);
#line 181
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 182
    testRunner.When(string.Format("faco um filtro sem informar o periodo {0} {1}", mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 183
    testRunner.Then("visualizo o campo Periodo em destaque para preenchimento", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Então ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Gerar Novo relatório UBEM sem informar o periodo., \" \"", new string[] {
                "chrome",
                "RelatorioUBEMCT18"}, SourceLine=186)]
        public virtual void GerarNovoRelatorioUBEMSemInformarOPeriodo__()
        {
#line 181
this.GerarNovoRelatorioUBEMSemInformarOPeriodo_("\" \"", "\" \"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarHistoricoDoRelatorioUBEM(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT19"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar histórico do relatorio UBEM", null, @__tags);
#line 190
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 191
 testRunner.When(string.Format("faco um filtro complemento para um periodo {0} {1} associacao {2} e DDA", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 192
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line 193
 testRunner.And("valido o historico do reletorio UBEM", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar histórico do relatorio UBEM, \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT19"}, SourceLine=196)]
        public virtual void ValidarHistoricoDoRelatorioUBEM_UBEM()
        {
#line 190
this.ValidarHistoricoDoRelatorioUBEM("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarFiltroProdutoNoRelatorioUBEMMensal(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT20"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar filtro Produto no relatório UBEM mensal", null, @__tags);
#line 200
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 201
 testRunner.When(string.Format("faco um filtro para um periodo {0} {1} associacao {2} e produto", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 202
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar filtro Produto no relatório UBEM mensal, \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT20"}, SourceLine=205)]
        public virtual void ValidarFiltroProdutoNoRelatorioUBEMMensal_UBEM()
        {
#line 200
this.ValidarFiltroProdutoNoRelatorioUBEMMensal("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"JORNAL NACIONAL\"", "\"15/10/2018\"", "\"999\"", "\" \"", "\"JORNALISMO\"", "\"BANG BANG\"", "\" \"", "\"MARCELLE MENDONCA,MAX MARTIN,MYRON BIRDSONG,RICKARD GORANSSON,SAVAN KOTECHA\"", "\"SOM E LUZ,KOBALT MUSIC,SOM E LUZ,KOBALT MUSIC,KOBALT MUSIC\"", "\"NÃO\"", "\"ADORNO\"", "\"ANITTA\"", "\"SIM\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarFiltroProdutoNoRelatorioUBEMComplemento(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT21"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar filtro Produto no relatório UBEM Complemento", null, @__tags);
#line 209
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 210
 testRunner.When(string.Format("faco um filtro com complemento para um periodo {0} {1} associacao {2} e produto", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 211
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar filtro Produto no relatório UBEM Complemento, \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT21"}, SourceLine=214)]
        public virtual void ValidarFiltroProdutoNoRelatorioUBEMComplemento_UBEM()
        {
#line 209
this.ValidarFiltroProdutoNoRelatorioUBEMComplemento("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"JORNAL NACIONAL\"", "\"15/10/2018\"", "\"999\"", "\" \"", "\"JORNALISMO\"", "\"BANG BANG\"", "\" \"", "\"MARCELLE MENDONCA,MAX MARTIN,MYRON BIRDSONG,RICKARD GORANSSON,SAVAN KOTECHA\"", "\"SOM E LUZ,KOBALT MUSIC,SOM E LUZ,KOBALT MUSIC,KOBALT MUSIC\"", "\"NÃO\"", "\"ADORNO\"", "\"ANITTA\"", "\"SIM\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarFiltroMidiaComFlagSimNoRelatorioUBEMMensal(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT22"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar filtro Mídia com flag Sim no relatório UBEM mensal", null, @__tags);
#line 218
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 219
 testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 220
 testRunner.And("seleciono a flag de sim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 221
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar filtro Mídia com flag Sim no relatório UBEM mensal, \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT22"}, SourceLine=224)]
        public virtual void ValidarFiltroMidiaComFlagSimNoRelatorioUBEMMensal_UBEM()
        {
#line 218
this.ValidarFiltroMidiaComFlagSimNoRelatorioUBEMMensal("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarFiltroMidiaComFlagNaoNoRelatorioUBEMMensal(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT23"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar filtro Mídia com flag Não no relatório UBEM mensal", null, @__tags);
#line 228
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 229
 testRunner.When(string.Format("faco um filtro para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 230
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar filtro Mídia com flag Não no relatório UBEM mensal, \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT23"}, SourceLine=233)]
        public virtual void ValidarFiltroMidiaComFlagNaoNoRelatorioUBEMMensal_UBEM()
        {
#line 228
this.ValidarFiltroMidiaComFlagNaoNoRelatorioUBEMMensal("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarFiltroMidiaComFlagSimNoRelatorioUBEMComplemento(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT24"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar filtro Mídia com flag Sim no relatório UBEM complemento", null, @__tags);
#line 237
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 238
    testRunner.When(string.Format("faco um filtro complemento para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 239
 testRunner.And("seleciono a flag de sim", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "E ");
#line 240
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar filtro Mídia com flag Sim no relatório UBEM complemento, \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT24"}, SourceLine=243)]
        public virtual void ValidarFiltroMidiaComFlagSimNoRelatorioUBEMComplemento_UBEM()
        {
#line 237
this.ValidarFiltroMidiaComFlagSimNoRelatorioUBEMComplemento("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarFiltroMidiaComFlagNaoNoRelatorioUBEMComplemento(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT25"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar filtro Mídia com flag Não no relatório UBEM complemento", null, @__tags);
#line 247
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 248
    testRunner.When(string.Format("faco um filtro complemento para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 249
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar filtro Mídia com flag Não no relatório UBEM complemento, \"UBEM\"", new string[] {
                "chrome",
                "RelatorioUBEMCT25"}, SourceLine=252)]
        public virtual void ValidarFiltroMidiaComFlagNaoNoRelatorioUBEMComplemento_UBEM()
        {
#line 247
this.ValidarFiltroMidiaComFlagNaoNoRelatorioUBEMComplemento("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        public virtual void ValidarDuplicidadeNoRelatorioUBEM(
                    string associacao, 
                    string mes, 
                    string ano, 
                    string programa, 
                    string dataExibicao, 
                    string capitulo, 
                    string episodio, 
                    string genero, 
                    string tituloDaMusica, 
                    string tituloOriginal, 
                    string autor, 
                    string dDA, 
                    string possuiDuplicidade, 
                    string sincronismo, 
                    string interpretes, 
                    string reprise, 
                    string tituloRelatorio, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "chrome",
                    "RelatorioUBEMCT26"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Validar duplicidade no relatorio UBEM", null, @__tags);
#line 256
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
this.FeatureBackground();
#line 257
    testRunner.When(string.Format("faco um filtro complemento para um periodo {0} {1} e associacao {2}", mes, ano, associacao), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Quando ");
#line 258
    testRunner.Then(string.Format("gero o relatorio UBEM e verifica se as informacoes de {0} {1} {2} {3} {4} {5} {6}" +
                        " {7} {8} {9} {10} {11} {12} {13} estao sendo exibidas corretamente para a {14} {" +
                        "15} {16} escolhidos", programa, dataExibicao, capitulo, episodio, genero, tituloDaMusica, tituloOriginal, autor, dDA, possuiDuplicidade, sincronismo, interpretes, reprise, tituloRelatorio, associacao, mes, ano), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Entao ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar duplicidade no relatorio UBEM, Variant 0", new string[] {
                "chrome",
                "RelatorioUBEMCT26"}, SourceLine=261)]
        public virtual void ValidarDuplicidadeNoRelatorioUBEM_Variant0()
        {
#line 256
this.ValidarDuplicidadeNoRelatorioUBEM("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.ScenarioAttribute("Validar duplicidade no relatorio UBEM, Variant 1", new string[] {
                "chrome",
                "RelatorioUBEMCT26"}, SourceLine=261)]
        public virtual void ValidarDuplicidadeNoRelatorioUBEM_Variant1()
        {
#line 256
this.ValidarDuplicidadeNoRelatorioUBEM("\"UBEM\"", "\"Outubro\"", "\"2018\"", "\"NOVA NOVELA\"", "\"03/10/2018\"", "\"2\"", "\" \"", "\"DRAMATURGIA DIÁRIA\"", "\"NOVA MUSICA HELEN\"", "\" \"", "\"TESTA\"", "\"HELEN PRODUCOES\"", "\"NÃO\"", "\"AO VIVO FUNDO EM JORNALISMO\"", "\"ANITTA\"", "\"NÃO\"", "\"Planilha Mensal UBEM\"", ((string[])(null)));
#line hidden
        }
        
        [TechTalk.SpecRun.TestRunCleanup()]
        public virtual void TestRunCleanup()
        {
            TechTalk.SpecFlow.TestRunnerManager.GetTestRunner().OnTestRunEnd();
        }
    }
}
#pragma warning restore
#endregion
